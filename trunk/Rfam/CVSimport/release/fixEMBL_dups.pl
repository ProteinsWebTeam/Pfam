#!/software/bin/perl -w

=head1 NAME 

fixEMBLdups.pl


=head1 DESCRIPTION

Takes the list of problem accessions (  /DATA/Dups.STD.HUM etc.) generated by getEMBLdata_all.pl and the relevant 
genbank files for these accessions (you need to download these with a batch entrez). It parses the accessions- looks up the ncbi file- assigns which is the ncbi_id we want to use (the first one). It checks if this ncbi id is already in our taxonmy table. 

=head1 PARAMETERS

./fixEMBL_dups.pl -rel 10 -ovr

=head1 AUTHOR jd7@sanger.ac.uk

=cut


use strict;
use DBI;
use Rfam;
use Getopt::Long;
use LWP::Simple;


my ($rel, $ovr);
&GetOptions(
            'rel:s'     => \$rel,
            'ovr'       => \$ovr          
);

my $rootdir=$Rfam::rfamseq_root_dir;

if (! $rel){
    die "Must specify a release version so we know where to put the data. It will be in $rootdir somewhere\n";
}

my $infile="$rootdir/$rel/DATA/Duplicate_ncbi_list";

if ( ! -d "$rootdir/$rel/DATA"){
     die "The directory $rootdir/$rel/DATA for the output doesnt yet exists-this cant be right**check it!!\n";
 }

if (! -e "$infile" ){
       die "$infile doesnt appear to exist check the name of the file in /DATA should be 'Acclist_duplicate_ncbi'\n";
}

my $gbfile="$rootdir/$rel/DATA/GB_files.gb";
if (! -e "$gbfile" ){
       die "$gbfile doesnt appear to exist check the name of the file in /DATA should be 'GB_files.gb'\n";
}

my $outfile="$rootdir/$rel/DATA/Duplicate_ncbi_list_resolved";

if ( -e $outfile && !$ovr ){
       die "$outfile already exists. If you want to overwrite it use the ovr option\n";
}

my $taxfile="$rootdir/$rel/DATA/Dups_resolved_for_taxonomy_table";

if ( -e $taxfile && !$ovr ){
       die "$taxfile already exists. If you want to overwrite it use the ovr option\n";
}


#RDB stuff--------
my( $dbHost, $dbPort, $dbName, $dbUser, $dbPass );

$dbHost=$Rfam::rdb_host; 
$dbUser='pfamro';
$dbPort=$Rfam::rdb_port;
$dbName='rfamlive_seq10';
$dbPass='';

# set up the DB connection and statement handles
my $dsn    = "dbi:mysql:database=$dbName;host=$dbHost;port=$dbPort";
my $dbAttr = { RaiseError => 1,
                             PrintError => 1 };
# connect
my $dbh = DBI->connect( $dsn, $dbUser, $dbPass, $dbAttr )
  or die "(EE) ERROR: couldn't connect to database: $!";

#select the species name from the current set loaded into rfamseq.
my $asth = $dbh->prepare( "select species from taxonomy where ncbi_id=?" )
  or die '(EE) ERROR: couldn\'t prepare query to select data from ' . $dbh->errstr;


####  NCBI TAX IDS  #####---------------------------------------------------------

#read in the duplicates list
my %dups;
my @missing;

#read in the gbfiles
open(GB, "<$gbfile") || die " cant open the $gbfile\n";
local $/ = "\/\/"; 
my @gbfiles=<GB>;
close(GB);


open(IN, "<$infile") || die "Cant open the infile\n";
open (OUT, ">$outfile") || die "Cant open the fixed outfile\n";
open(TAX, ">$taxfile" ) || die "Cant open the taxfile\n";

local $/="\n"; 

my %check;
my %newtax;
while (my $l= <IN>){
    chomp $l;
    my $match=0;
    my ($acc, @ncbi)=split("\t", $l);
    my ($oc_species);
    #get the relevant gbfile from the array of files.
    $check{$acc}=\@ncbi;

    my @gb=grep{/VERSION     $acc/} @gbfiles;  
    if (@gb > 1 || @gb ==0) {die "problem with gb files for $acc-get zero or more than one entry\n";}
    
    my $gbtext=$gb[0]; #use this again later for problem accs
    my @lines=split("\n", $gbtext);
    chomp @lines;
    
    #array of lines from gb file
    #parse to get the species name
    foreach my $l (@lines){
        if ($l=~/^SOURCE\s+(.*)$/){
            $oc_species=$1;
            last;
        }
    }
    
    #compare this name with those stored in rfamlive
    my $species;
    foreach my $id (@ncbi){
         #check if this exists in the rdb already -if not -record it and go to next acc
         unless(  $species= getSpecies($id) ) {
           next;
         }
          
         #compare this species to that from the mfetch
         if ( $oc_species eq $species ) {
             $match=1;
             print OUT "$acc\t$id\n";
             delete $check{$acc};
             last; #found a match so dont need to parse any more
             
         }
    }#ncbi list
        
        #these accessions use an acc that isnt in the databse already
        #so need to create entry for taxonomy table from the genbank file
        if ($match==0){
            my $gb_taxon;
            #need to get the right number from the 
            foreach my $l (@lines){
                if ($l=~m/taxon\:(\d+)\"$/){
                    $gb_taxon=$1;
                    last;
                }
            }
               
            #end of parsing gbfile to get the taxon id
                
                #need to then get the tax string over multiple lines
                my ($oc, $os);
            if ($gbtext=~/ORGANISM(.*\.)\nREFERENCE/s){
                my @oslines=split("\n", $1);
                $oc=shift @oslines; #first line
                $oc=~s/^\s+//g;

                
                foreach my $osl (@oslines){
                    $osl=~s/^\s+//g;
                    $os.=$osl;
                }
                
            }##getting os string;
            if (! $gb_taxon || ! $oc || !$os){
                print STDERR "(EE) No data resolved for $acc\n";
            }
            #this list of ncbi-ids will be redundant so store in hash
            #also some of them are just duplicates of what is already in the RDB with just a slightly diff species string
            my $tspecies;
            if( $tspecies=getSpecies($gb_taxon) ) {
                print OUT "$acc\t$gb_taxon\n";
                print STDERR "skipping taxonomy '$tspecies' : '$oc_species'\n"; 
            }else{
                print OUT "$acc\t$gb_taxon\n";
                $newtax{$gb_taxon}{'species'}=$oc;
                $newtax{$gb_taxon}{'string'}=$os; 
            }
                     
            delete $check{$acc};
        }#end of ! match (not in rfamlive)
            
        }#while in list of accessions

    foreach my $t (keys(%newtax)){
        print TAX join("\t", $t, $newtax{$t}{'species'},$newtax{$t}{'string'}), "\n";
    }

close(IN);
close (OUT);   
close (TAX);


#need to get the rest of the data for these seqs..
print STDERR "These sequences still with no mapping\n";
foreach my $k (keys(%check)){
    print STDERR $k, "\n";

}


#----------------------------------------------
#SUB Routines----------------------------------------



sub getSpecies{
    my $ncbi=shift;
    $asth->execute($ncbi);
    if( $DBI::err ) {
        print STDERR "(WW) WARNING: error executing  query to get rfamlive dataa:
"
            . $dbh->errstr . "\n";
        return;
    }
    my $row = $asth->fetchrow();
     if( $asth->err ) {
        print STDERR "(WW) WARNING: error whilst retrieving query asth"
            . $dbh->errstr . "\n";
        return;
    }
    $asth->finish();
    return $row;
}


#############################################################################
