#!/usr/local/bin/perl  -T

use lib './';
$ENV{'PATH'} = '/bin:/usr/bin';
my $path = $ENV{'PATH'};

#use lib '/pfamm/db/Pfam/scripts/Moodules';
use lib '/nfs/WWW/SANGER_docs/perl/bioperl-1.2';


use RfamWWWConfig;
use EntryWWW;
#use EntryB2WWW;
#use drawing;

#use CGI;
# Get the input
read(STDIN, $buffer, $ENV{'CONTENT_LENGTH'});


if ( ! $buffer ) {
    $buffer=$ENV{'QUERY_STRING'};
}

@pairs = split(/&/, $buffer);
my $temp  = shift(@pairs);
$qacc = $1 if ($temp =~  /^([\-\_\@\w\s+.]+)$/);





#print "Content-type: text/html\n\n";
#print "Content-type: text/html\n\n";
print "Content-type: text/html\n\n";


  
my $en;

eval {

    $db = &RfamWWWConfig::get_database();

     $en = $db->get_Entry_by_acc( $qacc );

    my $id = $en->id();

};
if (!$en->acc()) {
  #print "ID: " . $en->acc() . " <P>";
  &RfamWWWConfig::user_error("$qacc is not a valid Rfam accession"  );
}

print &RfamWWWConfig::header($en->id(), $en->id(), $qacc);
#print "EN: $en \n";
my    $en2www = EntryWWW->new( '-entry' => $en );



$en2www->write_table(\*STDOUT);


print &RfamWWWConfig::footer();

&RfamWWWConfig::logs("FAMILY:" .$en->acc() );












