[%
# grid.tt
# jt6 20090205 WTSI
# 
# page wrapper for the grid tests
#
# $Id: alignment.tt,v 1.2 2010-02-16 09:43:39 pg6 Exp $

PROCESS "components/require.tt";

requirements.css.push( "alignment.css" );
requirements.css.push( "alignViewer.css" );

requirements.js.push( "livegrid.js" );
-%]
    <p>
      <span class="loading" id="spinner" style="display: none">Loading alignment...</span>
    </p>
    
    <h2>Alignment</h2>
    <div id="gridWrapper">
      <p id="gridResultRange"></p>
      
      <div id="grid" >
        
        <div id="accessions"></div>
        <div id="sequences"></div>
        
      </div>
    </div>
    
    <div id='error' style="color:red;width:500px;font-size:large;background-color:#EEE;display:none;">
      [% errorMsg %]
    </div>

    <script type="text/javascript">
      // <![CDATA[
      var size = [% data.size %];
      console.log( 'the total rows is  is '+size );
      if (size > 0) {
      
        var myGridUpdater;
        
        Event.observe(window, "load", function(){
          //function mygrid() {
          var opts = {
            requestParameters: {
              accession: "[% data.acc %]",
              dsn_name: "[% data.dsn_name %]",
              max_rows: "[% data.size %]"
            },
            accessionsDiv: $('accessions'),
            sequencesDiv: $('sequences'),
            scrollvalue: 0,
            prefetchBuffer: true,
            onscroll: updateTopicsGridHeader,
            onComplete: function(){
              //console.log( "onComplete: hiding spinner" );
              $("spinner").hide();
            },
            onLoading: function(){
              //console.log( "onLoading: showing spinner" );
              $("spinner").show();
            },
            onFirstContent: function(){
              //console.log( "onFirstContent: updating row count" );
              updateTopicsGridHeader(0);
            }
          };
          
          myGridUpdater = new LiveGrid('grid', 25, "[% data.size %]", "[% c.uri_for('/alignment/alignment') %]", opts);
        });
        
        // called on the onscroll event
        function updateTopicsGridHeader(offset){
          //console.log( "updateTopicsGridHeader: offset: |" + offset + "|");
          
          if (myGridUpdater && myGridUpdater.metaData) {
            var metaData = myGridUpdater.metaData;
            
            // in certain cases where pair-wise alignment is shown
            var end = (offset + metaData.pageSize - 1);
            if (end > metaData.getTotalRows()) {
              end = metaData.getTotalRows();
            }
            
            $('gridResultRange').innerHTML = 'Rows %1 from %2'.replace('%1', offset + ' - ' + end).replace('%2', metaData.getTotalRows());
          }
          
        }
        
        // add an event listener to the sequences;
        $('sequences').observe('scroll', function(){
          myGridUpdater.options.scrollvalue = $('sequences').scrollLeft;
        });
      }else{
        $('error').show();
        $('gridWrapper').hide();
      }
      // ]]>
    </script>

