[%
# links.tt
# jt6 20060720 WTSI
# 
# a block to format links for various databases
#
# $Id: links.tt,v 1.4 2009-10-08 16:01:15 jt6 Exp $

USE String;

#-------------------------------------------------------------------------------
#- setup -----------------------------------------------------------------------
#-------------------------------------------------------------------------------

# these are the labels for the links that will appear in the internal or
# external links tables
labels = {
    GO         = "Gene Ontology",
    SO         = "Sequence Ontology",
    MIR        = "MicroRNA",
    snoRNABase = "snoRNABase",
    MIPF       = "MIPF",
    URL        = "External sites"
   };

# these two arrays store the order in which those links will be shown in
# the respective tables
internal = [
    "scoop",
    "atoaPRC",
    "atobBOTH",
    "atobPRC",   
    "atobPRODOM",
    "btoaBOTH",
    "btoaPRC",
    "btoaPRODOM",
    "btobPRC"
]
external = [
    "GO",
    "SO",
    "MIR",
    "snoRNABase",
    "MIPF",
    "URL"
];

# ditched link types
#    "interpro",  
#    "pdb",       

#-------------------------------------------------------------------------------
#- "public" blocks -------------------------------------------------------------
#-------------------------------------------------------------------------------

# these blocks are the "public" interface into this template. These are the ones
# that are intended to be called from the page generation templates.

#-------------------------------------------------------------------------------
# a block to construct HTML tables showing database links for a family 

BLOCK buildLinksTable;
  # parameter "type" should be either "rfam" or "clan", depending on whether
  # this template is being called for a family or a clan
  #PROCESS internalLinks type=type;
  PROCESS externalLinks type=type;
END; # of "buildLinksTable" block

#-------------------------------------------------------------------------------
# a block to take a string and convert the crudely marked up links into 
# proper HTML links

# parameters: input - the string to parse
BLOCK addLinks;

  FOREACH token IN input.split( '(\s+|\.|\;|\(|\))' );

    # a database reference, like "Swiss:Q15629"
    IF ( tags = token.match( '(\w+)\:(\w+)' ) );
      PROCESS buildLink type=tags.0
                        id=tags.1;

    # a reference citation, like "[1]"
    ELSIF ( tags = token.match( '\[([0-9]+)\]' ) );
      "[";
      PROCESS buildLink type="URL"
                        number=tags.0
                        internal=1
                        id="#ref${tags.0}";
      "]";

    ELSE;
      token;
    END;
  END;

END; # of "addLinks" block

#-------------------------------------------------------------------------------
#- "private" blocks ------------------------------------------------------------
#-------------------------------------------------------------------------------

# these blocks are intended to be "private" to this template. They should be 
# called by the public blocks, rather than by anything outside of this template

#-------------------------------------------------------------------------------
# a BLOCK that constructs the actual HTML links

BLOCK buildLink;
  SWITCH type %]
    [%- CASE "GO" -%]
<a class="ext" href="http://amigo.geneontology.org/cgi-bin/amigo/term_details?term=GO:[% id %]">[% id %]</a>
    [%- CASE "SO" -%]
<a class="ext" href="http://www.sequenceontology.org/miso/current_release/term/SO:[% id %]">[% id %]</a>
    [%- CASE "MIR" -%]
<a class="ext" href="http://www.mirbase.org/cgi-bin/mirna_entry.pl?acc=[% id %]">[% id %]</a>
    [%- CASE "snoRNABase" -%]
<a class="ext" href="http://www-snorna.biotoul.fr/plus.php?id=[% id %]">[% id %]</a>
    [%- CASE "MIPF" -%]
<a class="ext" href="http://www.mirbase.org/cgi-bin/mirna_summary.pl?fam=[% id %]">[% id %]</a>
    [%- CASE "URL" -%]
[% number %]: <a [% UNLESS internal %]class="ext" [% END %]href="[% id %]">[% id %]</a><br />
    [%- CASE -%]
      Other link: [% type -%]
  [%- END; # of SWITCH
END; # of "buildLink" block

#-------------------------------------------------------------------------------
# a block that builds the HTML table showing "internal" links table, i.e. those
# links that are within the Pfam website. This block should only be called from 
# the buildLinksTable block

BLOCK internalLinks;

  # inside of the internalLinks block, we define another block that actually
  # walks the link data in the stash and tries to generate rows of an HTML 
  # table, storing it in a variable
  # NOTE: this block must produce no spaces or blank lines, otherwise the check 
  # for content below could include an empty section in the final page output
  
  internalLinksContent = BLOCK;
    oe = 0;
    FOREACH db IN internal;
      IF xrefs.$db.size -%]
      <tr class="[% oe % 2 ? "odd" : "even"; oe = oe + 1 %]">
        <td class="label">[% 
          IF labels.$db;
            labels.$db; ": ";
          ELSE -%]
            Unknown links ([% db %]):
          [%- END;
      %]</td>
        <td>[%- 
          SWITCH db;
            CASE "interpro";
              FOREACH ref IN xrefs.$db -%]
                <span class="entry">
                  [%- PROCESS buildLink type="interpro" 
                                        id=ref -%]
                </span>[% 
              END;
            CASE "atoaPRC";
              FOREACH ref IN xrefs.$db -%]
                <span class="entry">
                  [%- PROCESS buildLink type="PFAMA" 
                                        id=ref.get_column("r_pfamA_acc") -%]
                </span>[%
              END;
            CASE "atobPRC";
              FOREACH ref IN xrefs.$db -%]
                <span class="entry">
                  [%- PROCESS buildLink type="PFAMB" 
                                        id=ref.pfamB_acc -%]
                </span>
              [%- END;
            CASE "atobPRODOM";
              FOREACH ref IN xrefs.$db -%]
                <span class="entry">
                  [%- PROCESS buildLink type="PFAMB" 
                                        id=ref.db_link -%]
                </span>
              [%- END;
            CASE "atobBOTH";
              FOREACH ref IN xrefs.$db -%]
                <span class="entry">
                  [%- PROCESS buildLink type="PFAMB" 
                                        id=ref.pfamB_acc -%]
                </span>
              [%- END;
            CASE "btobPRC";
              FOREACH ref IN xrefs.$db -%]
                <span class="entry">
                  [%- PROCESS buildLink type="PFAMB" 
                                        id=ref.get_column("r_pfamB_acc") -%]
                </span>
              [%- END;
            CASE "btoaPRC";
              FOREACH ref IN xrefs.$db -%]
                <span class="entry">
                  [%- PROCESS buildLink type="PFAMA" 
                                        id=ref.pfamA_id -%]
                </span>
              [%- END;
            CASE "btoaPRODOM";
              FOREACH ref IN xrefs.$db -%]
                <span class="entry">
                  [%- PROCESS buildLink type="PFAMA" 
                                        id=ref.db_link -%]
                </span>
              [%- END;
            CASE "btoaBOTH";
              FOREACH ref IN xrefs.$db -%]
                <span class="entry">
                  [%- PROCESS buildLink type="PFAMA" 
                                        id=ref.pfamA_id -%]
                </span>
              [%- END;
            CASE "scoop";
              FOREACH ref IN xrefs.$db;
                IF ref.get_column("l_pfamA_id") != ref.get_column("r_pfamA_id") %]
                  <span class="entry">
                    [%- PROCESS buildLink type="PFAMA"  
                                          id=ref.get_column("r_pfamA_id") -%]
                  </span>
                [%- END;
              END;
          END; # of SWITCH db 
      -%]</td>
      </tr>
      [%- END; # end of "if xrefs..."
    END; # end of "foreach db"
  END; # of "internalLinksContent" block
  
  # now we check the output of that nested block above, to see if there were
  # any link lines generated. If there were, we can go ahead and build the
  # HTML table and drop it into the output. If not, we don't have any output.
  IF internalLinksContent -%]
    <h2 class="padded">Internal database links</h2>
    <table class="details links" summary="Internal database links">
      <tbody>
        [% internalLinksContent %]
      </tbody>
    </table>
  [%- END; # of "if internalLinksContent"

END; # of "internalLinks" block

#-------------------------------------------------------------------------------
# a block to build an HTML table showing the "external" links table, i.e. those
# links that point to resources outside of the Pfam website. This should only 
# be called from the buildLinksTable block

BLOCK externalLinks;

  xrefs = {};
  SWITCH type;
    CASE "rfam";
      FOREACH link IN rfam.rfam_database_links;
        # CALL c.log.debug( "db_id: " _ link.db_id _ ", id: " _ link.db_link );
        db = link.db_id;
        IF NOT xrefs.${db}.defined;
          xrefs.${db} = [];
        END;
        xrefs.${db}.push( link );
      END;
    CASE "clan";
      FOREACH link IN clan.clan_database_links;
        db = link.db_id;
        IF NOT xrefs.${db}.defined;
          xrefs.${db} = [];
        END;
        xrefs.${db}.push( link );
      END;
  END; # of SWITCH type

  # a nested block that tries to build lines of the table using external links
  externalLinksContent = BLOCK;
    oe = 0;
    FOREACH db IN external;
      IF xrefs.$db.size -%]
        <tr class="[% oe % 2 ? "odd" : "even"; oe = oe + 1 %]">
          <td class="label">
            [%- IF labels.$db;
              labels.$db; ": ";
            ELSE -%]
              Unknown links ([% db %]):
            [%- END -%]
          </td>
          <td>[% 
            SWITCH db;
              CASE [ "GO", "SO", "MIR", "snoRNABase", "MIPF" ];
                FOREACH ref IN xrefs.$db -%]
                  <span class="entry">
                    [%- PROCESS buildLink type=db 
                                          id=ref.db_link -%]
                  </span>
                [%- END;
              CASE "URL";
                count = 1;
                FOREACH ref IN xrefs.$db -%]
                  <span class="entry">
                    [%- PROCESS buildLink type="URL" 
                                          id=ref.db_link 
                                          number=count;
                        count = count + 1 -%]
                  </span>
                [%- END;
            END; # of SWITCH db
        %]</td>
        </tr>
      [%- END; # end of "if xrefs..."
    END; # end of "foreach db"
  END; # of "externalLinksContent" block

  IF externalLinksContent -%]
    <h2 class="padded">External database links</h2>
    <table class="details links" summary="External database links">
      <tbody>
        [% externalLinksContent %]
      </tbody>
    </table>
  [%- END; # of "if externalLinksContent"

END; # of "externalLinks" block

#-------------------------------------------------------------------------------
-%]
[%#
Copyright (c) 2007: Genome Research Ltd.

Authors: John Tate (jt6@sanger.ac.uk), Paul Gardner (pg5@sanger.ac.uk), 
         Jennifer Daub (jd7@sanger.ac.uk)

This is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public License along with
this program. If not, see <http://www.gnu.org/licenses/>.
-%]
