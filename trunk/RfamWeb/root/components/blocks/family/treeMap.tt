[%
# treeMap.tt
# jt6 20060511 WTSI
#
# format the image map for the species tree
#
# $Id: treeMap.tt,v 1.3 2008-06-24 08:49:25 jt6 Exp $

# tell the wrapper not to add any header or footer
META naked = 1;

-%]
<img src="[% c.uri_for( "/family/tree/image", { acc => acc, label => label } ) | html %]"
     id="[% label %]_img" />

[% FOREACH node IN tree.node_array;
  
  # parse the node name into the components, which we'll use to build the 
  # tooltip contents
  matches = node.L.match( '^(\d+\.\d+)_(\w+\.?\d*)\/(\d+)\-(\d+)\_(.*)$' );
  
  # tidy up the species name
  species = matches.4.replace( "\_", " " );
  
  IF node.area AND matches.0 %]
  <div id="tipContents_[% label; loop.index %]"
       class="tipContents treetip"
       title="[% matches.1 %]"
       style="display: none">
    <dl>
      <dt>Range:</dt>
      <dd>[% matches.2 %] - [% matches.3 %]</dd>
      <dt>Score:</dt>
      <dd>[% matches.0 %]</dd>
      <dt>Species:</dt>
      <dd><a class="ext" href="[% c.uri_for( "/protein", { id => matches.1 } ) %]">
        [% species %]</a></dd>
    </dl>
  </div>

  [% END; # of IF
END -%]

<script type="text/javascript">
  // <![CDATA[

  // we'll use these for each tip in turn
  var matches;
  var width;
  var height;
  var left;
  var top;
  var fixed;
  var floating;
  var contents;

[% FOREACH node IN tree.node_array;

  # make sure this is a node that will have a tip
  matches = node.L.match( '^(\d+\.\d+)_(\w+\.?\d*)\/(\d+)\-(\d+)\_(.*)$' );

  NEXT UNLESS node.area AND matches.0 -%]
  
  // we're going to build two tips for each area. One tip will be the floating one,
  // the other will be the fixed one. Because we can only have one tip per HTML
  // element, we need two "areas"

  // get the coordinates of the area straight from the node
  width  = [% node.area.2 - node.area.0 %];
  height = [% node.area.3 - node.area.1 %] + 2;
  left   = [% node.area.0 %];
  top    = [% node.area.1 %];
  
  // build the two elements. Give them sensible IDs, so we can add observers later
  fixed    = new Element( "div", { id: "fixed_[% label; loop.index %]",    class: "floating targetArea" } );
  floating = new Element( "div", { id: "floating_[% label; loop.index %]", class: "fixed targetArea" } );

  // and insert each of them into the DOM. Order is important here. We need to be
  // able to attach an observer to the floating area, so we add it after the fixed one
  $("[% label %]_tree").insert( fixed );
  $("[% label %]_tree").insert( floating );

  // and use CSS styles to position them
  fixed.setStyle( {
    left:   left + "px",
    top:    top + "px",
    width:  width + "px",
    height: height + "px"
  } );

  floating.setStyle( {
    left:   left + "px",
    top:    top + "px",
    width:  width + "px",
    height: height + "px"
  } );

  // this will be the contents of the tip
  contents = $("tipContents_[% label; loop.index %]");

  // and now generate the tips

  // the fixed one is activated by the observer but hidden by a click on its
  // close button
  var fixed_tip_[% label; loop.index %] =
    new Tip( fixed,
             contents.cloneNode(true),
             {
               hideOn: { element: "closeButton", event: "click" },
               hook: { target: "topLeft", tip: "bottomLeft" },
               offset: { x: -8, y: 0 },
               showOn: "click",
               stem: "bottomLeft",
               target: fixed,
               title: contents.title,
             } );

  // the floating tip is shown on mouseover and hidden on mouseout
  var floating_tip_[% label; loop.index %] =
    new Tip( floating,
             contents.cloneNode(true),
             {
               hook: { target: "topLeft", tip: "bottomLeft" },
               offset: { x: -8, y: 0 },
               stem: "bottomLeft",
               target: floating,
               title: contents.title,
             } );

  // finally, add an observer to hide the floating tip and show the fixed one when
  // the user clicks on the area
  $("floating_[% label; loop.index %]").observe("click", function() {
    $("floating_[% label; loop.index %]").prototip.hide();
    $("fixed_[% label; loop.index %]").prototip.show();
  });

[% END; -%]

  // ]]>
</script>

[%#
Copyright (c) 2007: Genome Research Ltd.

Authors: John Tate (jt6@sanger.ac.uk), Paul Gardner (pg5@sanger.ac.uk), 
         Jennifer Daub (jd7@sanger.ac.uk)

This is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public License along with
this program. If not, see <http://www.gnu.org/licenses/>.
-%]
