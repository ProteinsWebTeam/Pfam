
# PfamDB.pm
# jt6 20060808 WTSI
#
# $Id: PfamDB.pm,v 1.5 2007-01-22 15:02:01 jt6 Exp $

=head1 NAME

PfamWeb::Model::PfamDB - a wrapper around the pfam database schema

=cut

package PfamWeb::Model::PfamDB;

=head1 DESCRIPTION

The model for the database is defined in a L<DBIx::Class::Schema>,
C<PfamDB>. This is a wrapper around that schema, which imports
auto-generates the L<Catalyst::Model> classes at runtime, using the
schema classes to define the components.

As the base class for the database model, this class also instantiates
a L<Bio::DasLite> object, which can be retrieved by controllers using
C<getDasLite>, something like

=over

=item C<$c->model("PfamDB")->getDasLite>

=back

The object is instantiated if it has not been generated by a previous
call on this method. The configuration parameters are stored in the
top level configuration file.

$Id: PfamDB.pm,v 1.5 2007-01-22 15:02:01 jt6 Exp $

=cut

use strict;
use warnings;

use base qw/Catalyst::Model::DBIC::Schema/;

use Bio::DasLite;

#-------------------------------------------------------------------------------

=head1 METHODS

=head2 getDasLite

Returns the L<Bio::DasLite> object, instantiating it first if necessary.

=cut

sub getDasLite {
  my( $this ) = @_;

  if( not defined $this->{dasLiteObj} ) {
	my( $dsn, $to, $proxy );
	( $dsn   ) = $this->{dasDsn}   =~ /^([\w\:\/\-\?\#]+)$/;
	( $to    ) = $this->{dasTo}    =~ /^(\d+)$/;
	( $proxy ) = $this->{dasProxy} =~ /^([\w\:\/\.\-\?\#]+)$/;
	$this->{dasLiteObj} = Bio::DasLite->new( { dsn        => $dsn,
											   timeout    => $to,
											   http_proxy => $proxy } );
  }

  return $this->{dasLiteObj};
}

#-------------------------------------------------------------------------------

=head1 AUTHOR

John Tate, C<jt6@sanger.ac.uk>

Rob Finn, C<rdf@sanger.ac.uk>

=head1 COPYRIGHT

This program is free software, you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

1;
