[%
# allArchitectures.tt
# jt6 20060410 WTSI
#
# This template builds the post-loaded page fragment which shows the 
# unique architectures for a given Pfam-A, Pfam-B or clan. Actually 
# the filename is a bit of a misnomer, because the controller only
# generates the first X domain graphics and this template provides a 
# control to allow the user to load the next block on demand.
#
# $Id: allArchitectures.tt,v 1.19 2009-10-07 13:23:55 jt6 Exp $

META naked = 1;

USE String;
USE Dumper;

BLOCK graphicRow;

  archString = String.new;
  prev = "";
  i = 1;

  # CALL c.log.debug( "allArchitectures.tt: BLOCK graphicRow: id: |$id|" );
  FOREACH arch IN seqInfo.$id.arch;
    # CALL c.log.debug( "allArchitectures.tt: BLOCK graphicRow: arch: |$arch|" );
    IF arch != prev;

      IF i > 1;
        IF prev != "";
          CALL archString.append( prev, " x $i, " );
        END;
      ELSE;
        IF prev != "";
          CALL archString.append( prev, ", " );
        END;
      END; # of IF i>1
      prev = arch;
      i = 1;

    ELSE;
      i = i + 1;
    END; # of IF arch...

    IF loop.last;
      IF i > 1;
        CALL archString.append( arch, " x $i, " );
      ELSE;
        CALL archString.append( arch, ", " );
      END;
    END;

  END; # of "FOREACH arch"

  CALL archString.trim.chop; -%]

  <!-- start of graphics row [% loop.index %] -->
  
  <div id="row[% id %]"
       class="graphicRow [% loop.index % 2 ? "odd" : "even" %]">

    [% # describe the architecture, if there is one
    IF seqInfo.$id.num %]
      <h3>
        [% IF seqInfo.$id.num > 1 -%]
          There are [% seqInfo.$id.num %] sequences
        [%- ELSE # and this really ought to be just "1"... -%]
          There is [% seqInfo.$id.num %] sequence
        [%- END -%]
        with the following architecture: 
        [%- archString -%]
      </h3>
    [% END %]

    <span class="graphicLabel">
      <a href="[% c.uri_for( "/protein", id ) %]">[% id %]</a>
      [% # capitalise the species name
      info = String.new( seqInfo.$id.species );
      "["; info.replace( '\[\s*', '' ).capital; "]" -%]
      ([% seqInfo.$id.length %] residues)
    </span>

    <div class="pgholder"></div>

    [% # don't show the "show all sequences" link for this row unless there 
       # is more than just one sequence 
    IF seqInfo.$id.num.defined; 
      IF seqInfo.$id.num != 1;
        # switch to show/hide the domains %]
        <span style="display: none">
          <span class="link revealLink">Hide</span> all sequences with this architecture.
        </span>
  
        [% # switch to actually generate the domains and load them into a div
           # taking care not to add empty parameters
        loadParams = {};
#        IF acc != "";
#          loadParams.acc = acc;
#        END; 
        IF seqInfo.$id.auto_arch.defined;
          loadParams.arch = seqInfo.$id.auto_arch;
        END;
        IF taxId != "";
          loadParams.taxId = taxId;
        END;
        loadUri = c.uri_for( "/domaingraphics", loadParams );
         -%]
        <span>
          <span class="link loadLink">Show</span> all sequences with this architecture.
        </span>

      [% END; # of "num != 1"
    END; # of "UNLESS seqInfo..."

    # somewhere to stuff the post-post-loaded graphics... %]
    <div class="domainArch">
      <div style="display: none" 
           class="loading">
        Loading all sequences...
      </div>
    </div>

  </div> 
  
  <!-- end of graphics row [% loop.index %] -->

[% END; # of "BLOCK graphicRow"

# and actually build the rows now...
FOREACH id IN ids;  
  PROCESS graphicRow id = id;
END; # of "FOREACH id"

IF first.defined AND last.defined;
  IF ( last + 1 ) < numRows -%]
    <div id="next[% first %]">
      <p>
        Currently showing architectures 1 to [% last + 1 %], out of a
        total of [% numRows %].
      </p>
      <input id="loadingButton"
             type="button"
             value="Show next [% count %]" />
      <span id="loadingSpinner"
            class="loading"
            style="display: none">Loading next set...</span>
    </div>
  [% ELSE -%]
    <p>
      [% IF numRows > 1 -%]
        Showing all [% numRows %] architectures.
      [% ELSE -%]
        Showing the only architecture.
      [% END -%]
    </p>
  [% END;
END -%]

<script type="text/javascript">
  // <![CDATA[

  if ( $("loadingButton") ) {

    $("loadingButton").observe("click", function() {
  
      $("loadingSpinner").show();
      $("loadingButton").disable();
  
      var r = new Ajax.Updater( 
        "next[% first %]",
        "[% c.uri_for( '/domaingraphics' ) %]",
        {
          evalScripts: true,
          parameters:  { acc:   "[% acc %]",
                         taxId: "[% taxId %]", // [%# this is so that we can also handle proteomes %]
                         start: "[% last + 1 %]" },
          onFailure:   function() {
            $("next[% first %]")
              .update("There was a problem retrieving the next set of domain graphics");
          }
        }
      );
  
    } );

  }
  
  [% # we need to stash a couple of bits of information for each of the architecture:
     #   count: the number of sequences for this architecture
     #   arch:  the auto_architecture number for this architecture
     # we store them on the HTML nodes directly, so that they're easily accessible to
     # the javascript object that controls this page
  FOREACH id IN ids -%]
    $("row[% id %]").store( "count", "[% seqInfo.$id.num %]" )
                    .store( "arch",  "[% seqInfo.$id.auto_arch %]" );
  [% END -%]

  var layout = [% layout OR "{}" %];
  var assignedColours = [% assignedColours OR "{}" %];
  var loadUri = "[% c.uri_for( '/domaingraphics', acc ) %]";
  var baseUri = "[% c.uri_for( '/' ) %]";

  var dgl = new DomainGraphicsLoader( loadUri, layout, assignedColours, baseUri );
  console.log( "allArchitectures.tt: dgl: ", dgl );

  // ]]>
</script>

[%#
Copyright (c) 2007: Genome Research Ltd.

Authors: Rob Finn (rdf@sanger.ac.uk), John Tate (jt6@sanger.ac.uk)

This is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public License along with
this program. If not, see <http://www.gnu.org/licenses/>.
-%]
