[%
# config_app.tt
# jt6 20120119 WTSI
# 
# build the block detailing the configuration of the PfamWeb app
#
# $Id$

#-------------------------------------------------------------------------------
# specify required stylesheets and javascript files 

PROCESS "components/require.tt";

requirements.css.push( "help.css" );
requirements.cssIeAll.push( "help_ie.css" );

#-------------------------------------------------------------------------------
-%]

<!-- start configure app block -->

<div class="block" id="vmConfigureAppBlock">
  <div class="handle">
    <h1>Configure PfamWeb application</h1>
  </div>
  <div class="blockContent">

<pre>
This file explains how to configure the PfamWeb application.

The Pfam website is built as a Perl application, PfamWeb. The dynamic content
in the pages is retrieved from a pair of MySQL databases and the web
application needs to be configured to connect to them.

Sitting in front of the PfamWeb application is a light-weight web server,
lighttpd, which serves static content such as images and CSS files, and proxies
dynamic content from the perl application to the browser. The web server is
configured to use port 8000 by default, but this can be changed if necessary.

jt6 20111012 WTSI


1. Set the database connection parameters
=========================================

PfamWeb is the Perl application that runs the Pfam website. It's
configured via a pair of Apache-style configuration files:

  └── opt/
      └── www/
          └── conf/
              ├── pfamweb.conf
              └── pfamweb_local.conf

The only changes you should need to make will be in the
"pfamweb_local.conf" file. You should not need to edit the main
"pfamweb.conf" file.

The main configuration parameters are the database connection settings:

  <Model PfamDB>
    schema_class "PfamDB"

    connect_info "dbi:mysql:database=pfam_25_0;host=database_server;port=3306"
    connect_info pfamwebro
    connect_info <password>

    dasDsn   "http://das.sanger.ac.uk/das/pfam"
    dasTo    4
    dasProxy "http://<proxy server>:<proxy port>"
  </Model>

The first "connect_info" line specifies the data source name (DSN),
essentially the connection details of the database itself. You will need
to have the host name of the machine where MySQL is running, as well as
the port where it's running, and the name of the database itself
(usually something like "pfam_25_0").

The next two lines give the username and password for the database
account that will be used to connect to the Pfam database. We recommend
making this a read-only account. For further security you should
restrict the account to accessing only the Pfam database schema.

The next lines give the parameters for the DAS-components of the site.
If your VM will need to use a web-proxy to connect to the wider
internet, you need to give it here on the "dasProxy" line, otherwise
leave the value blank ("").

Finally, you need to give connection details for the "web_user" schema.
The database account that you use here should have read/write access to
the web_user schema:

  <Model WebUser>
    schema_class "WebUser"

    connect_info "dbi:mysql:database=web_user;host=database_server;port=3306"
    connect_info webuser
    connect_info <password>

    <connect_info>
      AutoCommit 1
      mysql_enable_utf8 1
    </connect_info>
  </Model>

You should leave all other configuration parameters untouched.


2. Set the port number for the website
======================================

You may need to change the default port number (8000), depending on your
network environment. The port is set in one of the lighttpd configuration
files, "20-pfamweb.conf":

  └── etc/
      └── lighttpd/
          └── conf-available/
              └── 20-pfamweb.conf

Change the value on the following line:

  server.port = 8000


3. Configure PfamWeb to expect a front-end proxy
================================================

When designing network architectures, it's common to make all web
traffic come through a dedicated machine, a "front-end" proxy, which
then directs traffic to the appropriate internal machine, something like
this:
                     Internal network | Internet
+------------+      +------------+    |    +------------+
|   PfamWeb  |<-----| Front-end  |<-~ | ~--|   Client   |
|   server   |      |   proxy    |    |    |   browser  |
+------------+      +------------+    |    +------------+
"request from        192.168.0.10     |    87.248.112.181
87.248.112.181"                       |

If you plan to make your Pfam website accessible outside of your
immediate network, and if external traffic will be arriving via an
internal proxy, you may need to adjust the configuration of the
PfamWeb application to tell it that it is running behind a front-end
proxy. 

Telling PfamWeb about the proxy allows it to record the correct IP for
incoming requests, using the IP of the client rather than that of the
proxy, which can be important for auditing or for dealing with malicious
traffic from the wider network.

More importantly, PfamWeb builds many of the URLs in the Pfam website
dynamically and these links can be incorrectly generated if requests
are not properly treated as coming from outside of your network.

To tell PfamWeb that it's running behind a front-end proxy, edit the
local PfamWeb configuration file:

  └── opt/
      └── www/
          └── conf/
              └── pfamweb_local.conf

Change the value of "using_frontend_proxy" to 1:

  using_frontend_proxy 1


Useful links
============

http://search.cpan.org/dist/Config-General/
http://redmine.lighttpd.net/wiki/lighttpd/Docs:ConfigurationOptions

</pre>
  </div>
</div>

<!-- end configure app block -->
[%#
Copyright (c) 2012: Genome Research Ltd.

Authors: Rob Finn (rdf@sanger.ac.uk), John Tate (jt6@sanger.ac.uk)

This is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public License along with
this program. If not, see <http://www.gnu.org/licenses/>.
-%]
