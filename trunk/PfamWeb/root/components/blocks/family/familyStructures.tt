[%
# familyStructures.tt
# jt6 20060727 WTSI
# 
# build the summary block for families
#
# $Id: familyStructures.tt,v 1.19 2009-10-07 13:39:16 jt6 Exp $
 
# see if pdb_id was populated by the controller, in which case the user chose a
# specific PDB entry to be displayed; if its not populated, choose a random 
# entry and show the image for that

# tell the wrapper not to add any header or footer
META naked = 1;

USE Dumper;
CALL c.log.debug( "colours: " _ Dumper.dump(colours) );

IF pdb_id;
  pdbObj = pdb_unique.${pdb_id};
ELSE;
  
  # no ID given; pick a random PDB entry for this family
  idList = pdb_unique.keys.sort;
  numIds = idList.size;

  IF numIds > 1;
    TRY;
      # if we have the Math plugin, we can do it this way:
      USE Math;
      randomId = idList.${Math.rand(idList.size)};
    CATCH;
      # otherwise, do it the ugly way
      PERL %]
        my $numIds = $stash->get("numIds");
        $stash->set( rand => sprintf "%d",rand($numIds) ) if $numIds;
      [% END;
      randomId = idList.${rand};
    END;

    pdbObj = pdb_unique.$randomId;

  ELSE;
    # if theres only one structure theres no array under pdb_unique, so we go 
    # straight to the pdb object... I think
    pdbObj = pdb_unique.values.shift;
  END;

END;

IF pdb_unique.keys.size;

  # there are some PDB IDs, so generate some HTML...
  
  pdbImageObj = pdbObj.pdb_id; -%]

  <!-- start of pdb image block -->

  [%- IF pdbObj.pdb_image.pdb_image -%]

    <a href="[% c.uri_for( "/structure", pdbImageObj.pdb_id ) %]">
      <img class="pdbImage" 
         src="[% c.uri_for( "/structure/getimage", pdbImageObj.pdb_id, { size = "s" } ) | html %]"
           alt="[% pdbImageObj.pdb_id %]" /></a>

    [%- IF randomId -%]
      <h1>Example structure</h1>
    [%- END -%]

    <a href="[% c.uri_for( "/structure", pdbImageObj.pdb_id ) %]" class="pdbTitle">
      PDB entry [% pdbImageObj.pdb_id %]</a>: [% pdbImageObj.title %]

  [%- ELSE -%]

    <p class="inactive">No image available</p>

  [%- END -%]

  [% # if there are multiple PDB entries, allow the user to choose a specific one
  IF pdb_unique.keys.size > 1 %]

    <form id="structuresForm"
          action="[% c.uri_for( "/family/structures" ) %]">
      <div>
        <strong>View a different structure:</strong>
        <select id="pdbIdField">
          [% FOREACH id IN idList %]
          <option value="[% id %]"[% IF pdbImageObj.pdb_id == id %] 
                  disabled="disabled"
                  selected="selected"[% END %] />[% id %]</option>
          [% END %]
        </select
      </div>
    </form>


    <script type="text/javascript">
      // <![CDATA[
      var pdbImageSubmitter = function() {
        var r = new Ajax.Updater(
          "siph", 
          "[% c.uri_for( '/family/structures', pfam.pfama_acc ) %]",
           { parameters:  { pdbId: $F("pdbIdField") },
             evalScripts: true }
        );
      };

      $("structuresForm").observe("submit", function( e ) {
        e.stop();
        pdbImageSubmitter();
      } );

      $("pdbIdField").observe("change", function( e ) {
        pdbImageSubmitter();
      } );

      // ]]>
    </script>

  [% END # of "if pdb_unique.keys.size > 1" %]

  <!-- end of pdb image block -->

[% END # of "if pdb_unique.keys.size" %]

[%#
Copyright (c) 2007: Genome Research Ltd.

Authors: Rob Finn (rdf@sanger.ac.uk), John Tate (jt6@sanger.ac.uk)

This is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public License along with
this program. If not, see <http://www.gnu.org/licenses/>.
-%]
