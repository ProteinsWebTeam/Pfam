[%
# domain.tt
# jt6 20061108 WTSI
# 
# build the domain search block
#
# $Id: domain.tt,v 1.2 2007-08-10 15:13:01 jt6 Exp $

#-------------------------------------------------------------------------------
# specify required stylesheets and javascript files 

PROCESS "components/require.tt";

requirements.js.push( "scriptaculous/scriptaculous.js?load=effects" );

#-------------------------------------------------------------------------------

pages = [ "new", "top twenty", "numbers",
          "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", 
          "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" ];

pageList = BLOCK %]
<div class="pageList">
[% FOREACH page IN pages %]
  <span class="letter">
    <a href="#" onclick="chooseIds('[% page %]')">[% page | ucfirst %]</a>
  </span>
[% END %]
  <div class="cleaner"><!-- empty --></div>
</div>
[% END # of BLOCK %]

<!-- start domain search block -->

<div class="block" id="searchDomainBlock">
  <div class="handle">
    <h1>Domain search</h1>
  </div>
  <div class="blockContent">

    <p>
      Search for sequence architectures with the specified composition.
      <span class="moreLink" onclick="reveal(this,'dsNotes',false, true)">More...</span>
    </p>

    <div id="dsNotes" style="display: none">
      <p>
        You can specify one or more domains that <strong>must</strong> appear 
        in an architecture and one or more domains that must 
        <strong>not</strong> appear in the result architectures:
      </p>
      <ol>
        <li>choose a group of families or the first letter of the family ID
          from the list below</li>
        <li>in the left-most list, select the ID of a domain</li>
        <li>choose <em>Includes</em> or <em>Does NOT include</em> to add the
          selected domain to the appropriate list</li>
        <li>continue until the <em>Includes</em> and <em>Does NOT include</em>
          lists show all of the domains that you need</li>
        <li>press <em>Submit query</em> to search for architectures matching
          your specification</li>
      </ol>
    </div>

    [% pageList %]

    <form id="domainSearchForm" 
          onsubmit="submitter();return false" 
          method="get" 
          action="[% base %]search/domain">

      <div id="idList" class="domainList">

        <h3>Pfam domains</h3>
  
        <p class="domainQueryInstruction">
          Select a Pfam domain from this list and choose &quot;Includes&quot; or
          &quot;Does NOT include&quot; to add it to the query.
        </p>
  
        <div class="cleaner"><!-- empty --></div>
  
        <div id="idSelectionWrapper">
          <select id="idSelection" size="15">
            <option id="idBlank"></option>
          </select>
        </div>
  
        <span id="nlUpdateSpinner" class="loading">Loading IDs...</span>
  
        <span class="buttons">
          <input id="haveButton" type="button" onclick="addId('have')" value="Includes"/>
          <input id="notButton"  type="button" onclick="addId('not')" value="Does NOT include" />
        </span>
  
      </div>

      <div id="haveList" class="domainList">

      <h3>Architecture must include...</h3>
  
        <p class="domainQueryInstruction">
          These are the families that must appear in the architecture.
          Remove unwanted domains by selecting them and pressing &quot;Remove&quot;.
        </p>
    
        <div class="cleaner"><!-- empty --></div>
    
        <select id="have" size="15">
          <option id="haveBlank"></option>
        </select>
    
        <span class="buttons">
          <input type="button" onclick="removeId('have')" value="Remove" />
        </span>
    
      </div>

      <div id="notList" class="domainList">

        <h3>Architecture must <em>not</em> include...</h3>
  
        <p class="domainQueryInstruction">
          These are the families that must <em>not</em> appear in the architecture.
          Remove unwanted domains by selecting them and pressing &quot;Remove&quot;.
        </p>
  
        <div class="cleaner"><!-- empty --></div>
  
        <select id="not" size="15">
          <option id="notBlank"></option>
        </select>
  
        <span class="buttons">
          <input type="button" onclick="removeId('not')" value="Remove"/>
        </span>
  
      </div>
  
      <div id="domainSearchButtons">
        <input type="submit" value="Submit query" id="domainSearchSubmit" />
        <input type="button" value="Reset" onclick="resetDomainQueryForms()" />
        <span id="searchUpdateSpinner" class="loading">Finding matching architectures&hellip;</span>
      </div>

    </form>

    <p id="resultsHeader">The following architectures match your query architecture:</p>

    <div id="textResults" style="float: left"><!-- empty --></div>
        
  </div>
</div>

<script type="text/javascript">
  // <![CDATA[
  function submitter() {
    dsStarted();
    new Ajax.Updater( 'textResults',
                      '[% base %]search/domain', 
                      {
                        parameters: $("domainSearchForm").serialize(true),
                        onComplete: function(request) {
                                      dsCompleted(); 
                                    }
                      }
                    );
  }

  // hide the two spinners in the page and the results title
  $( "nlUpdateSpinner", "searchUpdateSpinner", "resultsHeader" ).invoke( "hide" );

  // the select fields have children just to make the HTML validate, but we
  // really want them empty, so do that now
  $( "idSelection", "have", "not" ).each(
    function(s) {
      $A( s.childNodes ).each(
        function(c) {
          s.remove(c);          
        }
      );      
    }
  );

  // set the URI for looking up the IDs beginning with a particular numeral
  var queryURI = "[% base %]family/browse";
  // ]]>
</script>

<!-- end domain search block -->
