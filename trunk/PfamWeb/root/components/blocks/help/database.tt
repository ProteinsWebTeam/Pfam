[%
# database.tt
# jt6 20080331 WTSI
# 
# build the database documentation block for the help pages
#
# $Id: database.tt,v 1.14 2009-10-28 17:07:52 jt6 Exp $
%]

<!-- start database block -->

<div class="block" id="helpDatabaseBlock">
  <div class="handle">
    <h1><a name="dbTop">Database documentation</a></h1>
  </div>
  <div class="blockContent">

    <div class="sections">
      <p>Contents:</p>
      <ol>
        <li><a class="link" rel="version">VERSION table</a></li>
        <li><a class="link" rel="domain">Domain information</a></li>
        <li><a class="link" rel="pfamseq">Pfamseq</a></li>
        <li><a class="link" rel="pfamb">Pfam-B</a></li>
        <li><a class="link" rel="architecture">Architecture</a></li>
        <li><a class="link" rel="annotation">Annotation information</a></li>
        <li><a class="link" rel="clanData">Clans</a></li>
        <li><a class="link" rel="dead">Dead families</a></li>
        <li><a class="link" rel="nested">Nested domains</a></li>
        <li><a class="link" rel="ncbi">NCBI and metagenomics data</a></li>
        <li><a class="link" rel="structural">Structural data</a></li>
        <li><a class="link" rel="proteomes">Proteomes</a></li>
        <li><a class="link" rel="related">Related families</a></li>
        <li><a class="link" rel="data">Data files</a></li>
      </ol>
    </div>

    <p>
      The Pfam MySQL database contains all of the data accessible via the
      website. The database currently consists of 75 tables. Below is some
      basic documentation on the schema layout and how smaller numbers of
      tables can be put together to enable access to a subset of the data. At
      the time of writing, between releases 24.0 and 25.0, the fields within
      the tables and the results of queries are correct. The data within the
      tables will change with each release. Although we do not anticipate any
      major changes to the database, we reserve the right to make changes with
      or without warning; we will endeavour to update this document if such
      changes are made.
    </p>
 
    <hr />

    <h2><a name="version">VERSION table</a></h2>

    <img class="tables"
         alt="Version table"
         src="[% c.uri_for( '/static/images/help/db_schema/version.png' ) %]" />

    <p>
      The <span class="table">VERSION</span> table contains information that relates to a particular Pfam
      release. It contains the version number of the Pfam database, the version
      numbers of the Swiss-Prot and TrEMBL databases that were used to build
      Pfam, and some statistics about the number of families and coverage. This
      table is stand-alone and does not link to any of the other tables. 
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the version information for the Pfam database
    </fieldset>

    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT * FROM VERSION \G

                          pfam_release: 24.0
                     pfam_release_date: 2009-09-24
                    swiss_prot_version: 57.6
                        trembl_version: 40.6
                         hmmer_version: 3.0b2
                        pfamA_coverage: 73.7
             pfamB_additional_coverage: 11.8
                pfamA_residue_coverage: 51.2
     pfamB_additional_residue_coverage: 12.4
                       number_families: 11912</pre>
    </fieldset>
    
    <p><a class="link" rel="dbTop">back to top</a></p>

    <hr />

    <h2><a name="domain">Domain information</a></h2>
    
    <img class="tables"
         alt="Domain information"
         src="[% c.uri_for( '/static/images/help/db_schema/domain.png' ) %]" />

    <p>
      Two of the central tables in the Pfam database are <span
        class="table">pfamseq</span>, which contains the UniProtKB sequence database,
      and <span class="table">pfamA</span>, which contains information about the
      Pfam-A families. Most of the other tables in the database link to one or both
      of these tables, either directly or indirectly.
    </p>
    <p>
      The table <span class="table">pfamA_reg_seed</span> contains the Pfam
      regions that are present in a seed alignment, and the <span class="table">
        pfamA_reg_full_significant</span> table contains all of the sequence 
      regions that match the HMM and score above the curated threshold, i.e. are 
      significant matches, for each family. There is also a table named 
      <span class="table">pfamA_reg_full_insignificant</span> which contains, as 
      the name suggests, all the insignificant matches for each family.
      Insignificant matches are those which match the HMM with an E-value less than
      1000, but score below the curated bit score threshold for each family.
    </p>
    <p>
      The table <span class="table">pfamA_reg_full_significant</span> contains a 
      column called 'in_full'. The matches that are present in the full alignment 
      for a Pfam family have this column set to 1, while those that are not present 
      in the full alignment have the 'in_full' column set to 0. A significant 
      match will only be excluded from the full alignment (in_full = 0) if it 
      matches a family that belongs to a clan, and the match overlaps with 
      another more significant (lower E-value) match to a family within the clan.
    </p>
    <p>
      For each sequence match we store two sets of coordinates, the 
      <em>envelope</em> coordinates and the <em>alignment</em> coordinates. 
      
      The envelope co-ordinates delineate the region on the sequence where the 
      match has been probabilistically determined to lie, whereas the alignment 
      coordinates delineate where HMMER is confident that the alignment of the 
      sequence to the profile HMM is correct. Our full alignments contain the
      envelope coordinates. In the database, envelope start and end positions
      are stored in the <span class="column">seq_start</span> and 
      <span class="column">seq_end fields</span> columns, and the alignment 
      coordinates are stored in the <span class="column">ali_start</span> 
      and <span class="column">ali_end</span> fields.
    </p>
    <p>
      The Pfam database has historically been built on the UniProtKB database.
      However, as of release 22.0 we also provide Pfam domain data for the 
      NCBI sequence database (GenPept) and a set of metagenomics sequences. 
      Further information about querying the NCBI and metagenomics data sets can 
      be found below.
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the domains for UniProtKB protein sequence 'VAV_HUMAN'
    </fieldset>

    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>
mysql> SELECT pfamA_acc, \
              pfamA_id, \
              seq_start, \
              seq_end \
       FROM   pfamseq, \
              pfamA, \
              pfamA_reg_full_significant \
       WHERE  pfamseq_id = 'VAV_HUMAN' \
       AND    in_full = 1 \
       AND    pfamseq.auto_pfamseq = pfamA_reg_full_significant.auto_pfamseq \
       AND    pfamA_reg_full_significant.auto_pfamA = pfamA.auto_pfamA;

+-----------+----------+-----------+---------+
| pfamA_acc | pfamA_id | seq_start | seq_end |
+-----------+----------+-----------+---------+
| PF00130   | C1_1     |       516 |     568 |
| PF00307   | CH       |         2 |     119 |
| PF00621   | RhoGEF   |       198 |     372 |
| PF00169   | PH       |       403 |     504 |
| PF00017   | SH2      |       671 |     745 |
| PF00018   | SH3_1    |       788 |     834 |
| PF00018   | SH3_1    |       615 |     652 |
+-----------+----------+-----------+---------+</pre>

    </fieldset>
    <p>
      To report all of the overlapping domains within any clans, leave out the
      'in_full =1' clause. More information on clans can be found later in
      this document.
    </p>
    
    <fieldset class="query">
      <legend>Example query</legend>
      Give me all the UniProtKB sequences in the <strong>full</strong> alignment 
      for the family 'B12D'
    </fieldset>

    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pfamseq_id, \
              pfamseq_acc, \
              seq_start, \
              seq_end, \
              pfamA_id \
       FROM   pfamA, \
              pfamseq, \
              pfamA_reg_full_significant \
       WHERE  pfamA_id = 'B12D' \
       AND    in_full = 1 \
       AND    pfamA.auto_pfamA = pfamA_reg_full_significant.auto_pfamA \
       AND    pfamA_reg_full_significant.auto_pfamseq = pfamseq.auto_pfamseq;

+--------------+-------------+-----------+---------+----------+
| pfamseq_id   | pfamseq_acc | seq_start | seq_end | pfamA_id |
+--------------+-------------+-----------+---------+----------+
| C1MQA1_9CHLO | C1MQA1      |        46 |     135 | B12D     |
| A9TC09_PHYPA | A9TC09      |         8 |      93 | B12D     |
| A9NTZ5_PICSI | A9NTZ5      |         7 |      92 | B12D     |
| Q84MX3_ORYSJ | Q84MX3      |         1 |      75 | B12D     |
| B9HTB9_POPTR | B9HTB9      |         3 |      89 | B12D     |
| B6T0R2_MAIZE | B6T0R2      |         1 |      87 | B12D     |
| A6MZE4_ORYSI | A6MZE4      |         3 |      89 | B12D     |
...</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all the UniProtKB sequences in the <strong>seed</strong> alignment 
      for the family 'B12D'
    </fieldset>
    
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pfamseq_id, \
              pfamseq_acc, \
              seq_start, \
              seq_end, \
              pfamA_id \
       FROM   pfamA, \
              pfamseq, \
              pfamA_reg_seed \
       WHERE  pfamA_id = 'B12D' \
       AND    pfamA.auto_pfamA = pfamA_reg_seed.auto_pfamA \
       AND    pfamA_reg_seed.auto_pfamseq = pfamseq.auto_pfamseq;

+--------------+-------------+-----------+---------+----------+
| pfamseq_id   | pfamseq_acc | seq_start | seq_end | pfamA_id |
+--------------+-------------+-----------+---------+----------+
| Q9XHD5_IPOBA | Q9XHD5      |         3 |      89 | B12D     |
| Q42338_ARATH | Q42338      |         2 |      88 | B12D     |
| Q940E1_CASSA | Q940E1      |        29 |     116 | B12D     |
| Q9LJ47_ARATH | Q9LJ47      |         1 |      87 | B12D     |
| O22414_ORYSA | O22414      |         3 |      89 | B12D     |
| Q6YU35_ORYSJ | Q6YU35      |        11 |      97 | B12D     |
| Q6YU38_ORYSJ | Q6YU38      |         2 |      84 | B12D     |
| Q6Z4G5_ORYSJ | Q6Z4G5      |         1 |      87 | B12D     |
| Q1H8M8_BETVU | Q1H8M8      |         4 |      90 | B12D     |
+--------------+-------------+-----------+---------+----------+</pre>
    </fieldset>

    <p><a class="link" rel="dbTop">back to top</a></p>

    <hr />

    <h2><a name="pfamseq">Pfamseq - other tables</a></h2>

    <img class="tables"
         alt="Other regions, sites, disulphides"
         src="[% c.uri_for( "/static/images/help/db_schema/pfamseq_other.png" ) %]" />

    <p>
      This section contains a few tables that link to the <span
      class="table">pfamseq</span> table, but don't fit nicely into any of the
      sections described above.
    </p>

    <p>
      The <span class="table">pfam_annseq</span> table contains binary Perl data
      structures which are used internally to generate the Pfam domain graphics.
      This table is not intended for use by Pfam users, as it is very dependent on
      Perl module versions.
    </p>

    <p>
      The <span class="table">evidence</span> table contains the UniProtKB evidence
      code key that is used in the <span class="column">evidence</span> field in the
      <span class="table">pfamseq</span> table.
    </p>

    <p>
      UniProtKB sequences have secondary accessions if they have been merged or
      split. Secondary accession numbers are stored in the table called <span
      class="table">secondary_pfamseq_acc</span>. 
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the secondary accession(s) for the UniProtKB sequence 'P15455'
    </fieldset>

    <fieldset class="sql">
      <pre>mysql> SELECT secondary_acc \
       FROM   pfamseq, \
              secondary_pfamseq_acc \
       WHERE  pfamseq.auto_pfamseq = secondary_pfamseq_acc.auto_pfamseq \
       AND    pfamseq_acc= 'P15455';

+---------------+
| secondary_acc |
+---------------+
| Q3E711        |
| Q9FFH7        |
+---------------+</pre>
    </fieldset>

    <p><a class="link" rel="dbTop">back to top</a></p>

    <hr />

    <h2><a name="pfamb">Pfam-B, other sequence regions, active site and disulphide bond 
      information for a sequence</a></h2>

    <img class="tables"
         alt="Other regions, sites, disulphides"
         src="[% c.uri_for( "/static/images/help/db_schema/other_regions.png" ) %]" />

    <p>
      These tables contain sequence specific information about the
      sequences in the <a class="ext" 
        href="http://www.uniprot.org/help/uniprotkb/">UniProtKB</a>
      database. The <span class="table">other_regions</span> tables
      contains coiled coil, low complexity, signal peptide and
      transmembrane regions. The <span class="table">context_pfam_regions</span>
      table contains context domains; context domains are those that 
      do not score above the family gathering threshold, but are expected 
      to be real based on the presence of the surrounding domains found in 
      the protein. The <span class="table">pfamseq_markup</span> table 
      contains active site information which is taken from the UniProtKB 
      feature table. Additional active site residues are predicted by Pfam 
      based on conserved residues in a Pfam alignment. The 
      <span class="table">pfamseq_disulphide</span> tables contains 
      disulphide bond information from the UniProtKB feature table.
    </p>
    <p>
      The <span class="table">pfamseq</span> table also links to the 
      Pfam-B family tables. Pfam-B families are automatically generated 
      protein sequence clusters produced by the <a class="ext"
        href="http://ekhidna.biocenter.helsinki.fi:9801/sqgraph/pairsdb">
        ADDA</a> database, and they give an indication of additional 
      conserved regions that are not covered by Pfam-A families. Pfam-B
      families have an associated alignment, but do not have any
      annotation or literature references. Unlike Pfam-A alignments, Pfam-B
      alignments have not been manually checked for quality by a Pfam
      curator. 
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the transmembrane, signal-peptide, coiled-coils and 
      low-complexity information for the UniProtKB sequnce 'VAV_HUMAN'
    </fieldset>

    <fieldset class="sql">
      <pre>mysql> SELECT type_id, \
              source_id, \
              seq_start, \
              seq_end, \
              score \
       FROM   other_reg, \
              pfamseq \
       WHERE  pfamseq.pfamseq_id = 'VAV_HUMAN' \
       AND    other_reg.auto_pfamseq = pfamseq.auto_pfamseq;

+----------------+-----------+-----------+---------+--------+
| type_id        | source_id | seq_start | seq_end | score  |
+----------------+-----------+-----------+---------+--------+
| low_complexity | seg       |        42 |      51 | 1.5700 |
| low_complexity | seg       |       356 |     367 | 2.1900 |
+----------------+-----------+-----------+---------+--------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the context regions for the UniProtKB sequence 'Q8I6U6_PLAF7'
    </fieldset>

    <fieldset class="sql">
      <pre>mysql> SELECT seq_start, \
              seq_end, \
              domain_score, \
              pfamA.pfamA_acc, \
              pfamA_id, \
              pfamA.description \
       FROM   context_pfam_regions, \
              pfamseq, \
              pfamA \
      WHERE  pfamseq.pfamseq_acc = 'O74056' \
      AND    context_pfam_regions.auto_pfamseq = pfamseq.auto_pfamseq \
      AND    pfamA.auto_pfamA = context_pfam_regions.auto_pfamA;

+-----------+---------+--------------+-----------+----------+--------------------------+
| seq_start | seq_end | domain_score | pfamA_acc | pfamA_id | description              |
+-----------+---------+--------------+-----------+----------+--------------------------+
|       602 |     641 |         4.96 | PF00400   | WD40     | WD domain, G-beta repeat |
|       711 |     750 |         7.05 | PF00400   | WD40     | WD domain, G-beta repeat |
|      1420 |    1457 |         9.29 | PF00400   | WD40     | WD domain, G-beta repeat |
|      1824 |    1862 |         8.96 | PF00400   | WD40     | WD domain, G-beta repeat |
+-----------+---------+--------------+-----------+----------+--------------------------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the active site information for UniProtKB sequence 'Q22CX9'
    </fieldset>

    <fieldset class="sql">
      <pre>mysql> SELECT pfamseq_acc, \
              pfamseq_id, \
              residue, \
              label \
       FROM   pfamseq, \
              pfamseq_markup, \
              markup_key \
       WHERE  pfamseq.auto_pfamseq = pfamseq_markup.auto_pfamseq \
       AND    pfamseq_markup.auto_markup = markup_key.auto_markup \
       AND    pfamseq_acc = 'Q10L43';
+-------------+--------------+---------+----------------------------+

| pfamseq_acc | pfamseq_id   | residue | label                      |
+-------------+--------------+---------+----------------------------+
| Q10L43      | Q10L43_ORYSJ |    1889 | Pfam predicted active site |
| Q10L43      | Q10L43_ORYSJ |    1836 | Pfam predicted active site |
| Q10L43      | Q10L43_ORYSJ |    1819 | Pfam predicted active site |
+-------------+--------------+---------+----------------------------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all the residues involved in disulphide bonds in the UniProtKB 
      sequence 'P98092'
    </fieldset>

    <fieldset class="sql">
      <pre>mysql> SELECT pfamseq_acc, \
              pfamseq_id, \
              bond_start, \
              bond_end \
       FROM   pfamseq, \
              pfamseq_disulphide \
       WHERE  pfamseq_disulphide.auto_pfamseq = pfamseq.auto_pfamseq \
       AND    pfamseq_acc = 'Q43495';

+-------------+------------+------------+----------+
| pfamseq_acc | pfamseq_id | bond_start | bond_end |
+-------------+------------+------------+----------+
| Q43495      | 108_SOLLC  |         67 |       92 |
| Q43495      | 108_SOLLC  |         51 |       66 |
| Q43495      | 108_SOLLC  |         41 |       77 |
| Q43495      | 108_SOLLC  |         79 |       99 |
+-------------+------------+------------+----------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the pfamB regions for the UniProtKB sequence 'VAV_HUMAN'
    </fieldset>

    <fieldset class="sql">
      <pre>mysql> SELECT DISTINCT pfamB.pfamB_acc, \
              pfamB_id, \
              seq_start, \
              seq_end \
       FROM   pfamB_reg, \
              pfamB, \
              pfamseq \
       WHERE  pfamseq_id = 'SPT13_HUMAN' \
       AND    pfamB_reg.auto_pfamseq = pfamseq.auto_pfamseq \
       AND    pfamB_reg.auto_pfamB = pfamB.auto_pfamB;

+-----------+--------------+-----------+---------+
| pfamB_acc | pfamB_id     | seq_start | seq_end |
+-----------+--------------+-----------+---------+
| PB066871  | Pfam-B_66871 |         3 |      72 |
+-----------+--------------+-----------+---------+</pre>
    </fieldset>

    <p><a class="link" rel="dbTop">back to top</a></p>

    <hr />

    <h2><a name="architecture">Architecture information for a family</a></h2>

    <img class="tables"
         alt="Architecture table"
         src="[% c.uri_for( "/static/images/help/db_schema/architecture.png" ) %]" />

    <p>
      In Pfam, an architecture is the combination of domains that are present
      on a protein. The <span class="table">architecture</span> table can be 
      used to find out which combination of domains are found on particular 
      sets of proteins, or to find out which proteins share the same domains 
      architecture.
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the architectures and UniProtKB protein sequences for the 
      family 'Dehyd-heme_bind'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT architecture_acc, \
              pfamseq_id, \
              pfamseq_acc \
       FROM   architecture, \
              pfamseq \
       WHERE  architecture like '%Dehyd-heme_bind%' \
       AND    pfamseq.auto_architecture = architecture.auto_architecture;

+-------------------------+--------------+-------------+
| architecture_acc        | pfamseq_id   | pfamseq_acc |
+-------------------------+--------------+-------------+
| PF09098 PF09099 PF09100 | Q8VUT0_PARDE | Q8VUT0      |
| PF09098 PF09099 PF09100 | Q8VW85_PSEPU | Q8VW85      |
| PF09098 PF09099 PF09100 | Q5P0U9_AZOSE | Q5P0U9      |
| PF09098 PF09099 PF09100 | Q5P5Q6_AZOSE | Q5P5Q6      |
| PF09098 PF09099 PF09100 | Q4K966_PSEF5 | Q4K966      |
| PF09098 PF09099 PF09100 | Q3KBY9_PSEPF | Q3KBY9      |
| PF09098 PF09099 PF09100 | Q2BKZ1_9GAMM | Q2BKZ1      |
| PF09098 PF09099 PF09100 | Q2BHT3_9GAMM | Q2BHT3      |
| PF09098 PF09099 PF09100 | A0NPA8_9RHOB | A0NPA8      |
| PF09098 PF09099 PF09100 | Q1I9C7_PSEE4 | Q1I9C7      |
| PF09098 PF09099 PF09100 | A1B2Q6_PARDP | A1B2Q6      |
| PF09098 PF09099 PF09100 | A1K4V1_AZOSB | A1K4V1      |
| PF09098 PF09099 PF09100 | A5W2T6_PSEP1 | A5W2T6      |
| PF09098 PF09099 PF09100 | A8ES16_ARCB4 | A8ES16      |
| PF09098 PF09099 PF09100 | B0KQV9_PSEPG | B0KQV9      |
| PF09098 PF09099 PF09100 | B1J9N8_PSEPW | B1J9N8      |
| PF09098 PF09099 PF09100 | B1N7H2_PSEPU | B1N7H2      |
| PF09098 PF09100         | B6BG33_9RHOB | B6BG33      |
| PF09098 PF09099 PF09100 | B9Z0G3_9NEIS | B9Z0G3      |
| PF09098 PF09099 PF09100 | C4KB05_9RHOO | C4KB05      |
| PF09098 PF09099 PF09100 | C4ZJ19_9RHOO | C4ZJ19      |
+-------------------------+--------------+-------------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all the sequences which have the architecture 'PF09098 PF09099 PF09100'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pfamseq_acc, \
              pfamseq_id  \
       FROM   architecture,  \
              pfamseq \
       WHERE  architecture.auto_architecture = pfamseq.auto_architecture \
       AND    architecture_acc = "PF09098 PF09099 PF09100";

+-------------+--------------+
| pfamseq_acc | pfamseq_id   |
+-------------+--------------+
| Q8VUT0      | Q8VUT0_PARDE |
| Q8VW85      | Q8VW85_PSEPU |
| Q5P0U9      | Q5P0U9_AZOSE |
| Q5P5Q6      | Q5P5Q6_AZOSE |
| Q4K966      | Q4K966_PSEF5 |
| Q3KBY9      | Q3KBY9_PSEPF |
| Q2BKZ1      | Q2BKZ1_9GAMM |
| Q2BHT3      | Q2BHT3_9GAMM |
| A0NPA8      | A0NPA8_9RHOB |
| Q1I9C7      | Q1I9C7_PSEE4 |
| A1B2Q6      | A1B2Q6_PARDP |
| A1K4V1      | A1K4V1_AZOSB |
| A5W2T6      | A5W2T6_PSEP1 |
| A8ES16      | A8ES16_ARCB4 |
| B0KQV9      | B0KQV9_PSEPG |
| B1J9N8      | B1J9N8_PSEPW |
| B1N7H2      | B1N7H2_PSEPU |
| B9Z0G3      | B9Z0G3_9NEIS |
| C4KB05      | C4KB05_9RHOO |
| C4ZJ19      | C4ZJ19_9RHOO |
+-------------+--------------+</pre>
    </fieldset>

    <hr />

    <h2><a name="annotation">Annotation information for a family</a></h2>

    <img class="tables"
         alt="Literature references"
         src="[% c.uri_for( '/static/images/help/db_schema/annotation.png' ) %]" />

    <p>
      In addition to the Pfam annotation, we also store <a class="ext"
        href="http://www.ebi.ac.uk/interpro/">InterPro</a> annotation and their
      associated <a class="ext" href="http://www.geneontology.org/"> GO</a>
      terms for each family. Links to other databases, e.g.  <a class="ext"
        href="http://scop.mrc-lmb.cam.ac.uk/scop/">SCOP</a>) are also stored
      where appropriate. The <span class="table">pfamA</span> table contains
      the GA, TC and NC cut-offs for each family, and additional information
      surrounding the Pfam-A family, including the number of sequences in the
      seed and full alignment. The <span
        class="table">pfamA_interactions</span> table contains, where data are
      available, pairs of interacting Pfam domains. The data in this table are
      taken from the <a class="ext" href="http://www.ipfam.org/">iPfam</a>
      resource, which describes physical interactions between Pfam domains that
      have a representative structure in the PDB.
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the Pfam annotation for the family 'CBS'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT comment FROM pfamA WHERE pfamA_id = 'CBS' \G
      
*************************** 1. row ***************************
comment: CBS domains are small intracellular modules that pair together
to form a stable globular domain [2]. This family represents a single CBS
domain. Pairs of these domains have been termed a Bateman domain [6]. CBS
domains have been shown to bind ligands with an adenosyl group such as
AMP, ATP and S-AdoMet [5].  CBS domains are found attached to a wide
range of other protein domains suggesting that CBS domains may play a
regulatory role making proteins sensitive to adenosyl carrying ligands.
The region containing the CBS domains in Cystathionine-beta synthase is
involved in regulation by S-AdoMet [4]. CBS domain pairs from AMPK bind
AMP or ATP [5]. The CBS domains from IMPDH and the chloride channel CLC2
bind ATP [5].</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the interpro annotation for the family 'CBS'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT interpro_id, \
              abstract \
       FROM   interpro, \
              pfamA \
       WHERE  pfamA.auto_pfamA = interpro.auto_pfamA \
       AND    pfamA_id = 'CBS'\G
interpro_id: IPR000644
   abstract: CBS (cystathionine-beta-synthase) domains are small ...
         </pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the gene ontology (GO) annotation and family information for 
      the family 'p450'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>
mysql> SELECT go_id, \
              term, \
              category \
       FROM   gene_ontology AS go, \
              pfamA AS p \
       WHERE  go.auto_pfamA = p.auto_pfamA \
       AND    pfamA_id = 'p450';

+------------+---------------------------+----------+
| go_id      | term                      | category |
+------------+---------------------------+----------+
| GO:0009055 | electron carrier activity | function |
| GO:0020037 | heme binding              | function |
| GO:0005506 | iron ion binding          | function |
| GO:0004497 | monooxygenase activity    | function |
+------------+---------------------------+----------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the literature references for the family 'CBS'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pfamA_literature_references.comment, \
              order_added, \
              pmid, \
              title, \
              literature_references.author, \
              journal \
       FROM   pfamA, \
              pfamA_literature_references, \
              literature_references \
       WHERE  pfamA_id = 'CBS' \
       AND    pfamA.auto_pfamA = pfamA_literature_references.auto_pfamA \
       AND    pfamA_literature_references.auto_lit = literature_references.auto_lit \G

*************************** 1. row ***************************
    comment: Discovery and naming of the CBS domain.
order_added: 1
       pmid: 9020585
      title: The structure of a domain common to archaebacteria and the homocystinuria disease protein.
     author: Bateman A;
    journal: Trends Biochem Sci 1997;22:12-13.
...</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the database references for the family 'A2M'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT db_id, \
              pfamA_database_links.comment, \
              db_link, \
              other_params \
       FROM   pfamA, \
              pfamA_database_links \
       WHERE  pfamA_id = 'A2M' \
       AND    pfamA.auto_pfamA = pfamA_database_links.auto_pfamA;

+----------+---------+-----------+--------------+
| db_id    | comment | db_link   | other_params |
+----------+---------+-----------+--------------+
| PROSITE  |         | PDOC00440 |              |
| SCOP     |         | 1c3d      | fa           |
| HOMSTRAD |         | A2M_A     |              |
| HOMSTRAD |         | A2M_B     |              |
+----------+---------+-----------+--------------+</pre>
    </fieldset>

    <p>
      <strong>Note:</strong> The <span class="column">other_params</span> 
      column contains 'fa;' where the Pfam family corresponds to a 
      SCOP family, and 'sf;' where the Pfam family corresponds to 
      a SCOP superfamily.
    </p> 


    <fieldset class="query">
      <legend>Example query</legend>
      Give me the interacting domains for the domain 'EGF'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>
mysql> SELECT a.pfamA_id, \
              b.pfamA_id \
       FROM   pfamA as a, \
              pfamA as b, \
              pfamA_interactions \
       WHERE  a.auto_pfamA = pfamA_interactions.auto_pfamA_A \
       AND    b.auto_pfamA = pfamA_interactions.auto_pfamA_B \
       AND    a.pfamA_id = "EGF";

+----------+----------------+
| pfamA_id | pfamA_id       |
+----------+----------------+
| EGF      | EGF            |
| EGF      | Ldl_recept_a   |
| EGF      | Lectin_C       |
| EGF      | Trypsin        |
| EGF      | CUB            |
| EGF      | Gla            |
| EGF      | Recep_L_domain |
| EGF      | TSP_3          |
| EGF      | An_peroxidase  |
| EGF      | TSP_C          |
| EGF      | EGF_CA         |
+----------+----------------+</pre>
    </fieldset>

    <p><a class="link" rel="dbTop">back to top</a></p>

    <hr />

    <h2><a name="clanData">Clan data</a></h2>

    <img class="tables"
         alt="Clan table"
         src="[% c.uri_for( "/static/images/help/db_schema/clan.png" ) %]" />

    <p>
      A Pfam <em>clan</em> is a set of related Pfam-A families. The information
      we use to determine which families belong to the same clan includes related
      structure, related function, matching of the same sequence to HMMs from
      different families, and profile-profile comparisons. <strong>Note</strong> that
      not all Pfam-A families belong to a clan and that a Pfam-A family cannot belong
      to more than one clan.
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the id and accession of the clan to which Pfam family 'EGF' belongs
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>
mysql> SELECT clan_id, \
              clan_acc \
       FROM   clans, \
              clan_membership, \
              pfamA \
       WHERE  clans.auto_clan = clan_membership.auto_clan \
       AND    clan_membership.auto_pfamA = pfamA.auto_pfamA \
       AND    pfamA.pfamA_id = 'EGF';

+---------+----------+
| clan_id | clan_acc |
+---------+----------+
| EGF     | CL0001   |
+---------+----------+
</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the Pfam-A families that belong to clan 'CL0001'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pfamA_acc, \
              pfamA_id \
       FROM   clans, \
              clan_membership, \
              pfamA \
       WHERE  clans.auto_clan = clan_membership.auto_clan \
       AND    clan_membership.auto_pfamA = pfamA.auto_pfamA \
       AND    clan_acc = 'CL0001';

+-----------+---------------+
| pfamA_acc | pfamA_id      |
+-----------+---------------+
| PF01414   | DSL           |
| PF04863   | EGF_alliinase |
| PF00052   | Laminin_B     |
| PF00053   | Laminin_EGF   |
| PF07645   | EGF_CA        |
| PF00008   | EGF           |
| PF07974   | EGF_2         |
| PF09064   | Tme5_EGF_like |
| PF09289   | FOLN          |
| PF12661   | hEGF          |
| PF12662   | cEGF          |
+-----------+---------------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the clan description and comment for clan 'CL0001'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT clan_acc, \
              clan_id, \
              clan_description, \
              clan_comment \
       FROM   clans \
       WHERE  clan_acc = 'CL0001' \G

clan_acc: CL0001
clan_id: EGF
clan_description: EGF superfamily
clan_comment: Members of this clan all belong to the EGF superfamily ...</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the literature references for clan 'CL0001'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT comment, \
              order_added, \
              pmid, \
              title, \
              author, \
              journal \
       FROM   clans, \
              literature_references, \
              clan_lit_refs \
       WHERE  clans.auto_clan = clan_lit_refs.auto_clan \
       AND    clan_lit_refs.auto_lit = literature_references.auto_lit \
       AND    clan_acc = 'CL0001' \G

*************************** 1. row ***************************
    comment: NULL
order_added: 2
       pmid: 11852228
      title: Domain structure and organisation in extracellular matrix proteins.
     author: Hohenester E, Engel J;
    journal: Matrix Biol 2002;21:115-128.
*************************** 2. row ***************************
    comment: NULL
order_added: 1
       pmid: 3282918
      title: Structure and function of epidermal growth factor-like regions in proteins.
     author: Appella E, Weber IT, Blasi F;
    journal: FEBS Lett 1988;231:1-4.</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the first 5 architectures for the clan 'CL0001'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT architecture, \
              architecture_acc, \
              type_example, \
              no_seqs \
       FROM   architecture, \
              clan_architecture, \
              clans \
       WHERE  architecture.auto_architecture = clan_architecture.auto_architecture \
       AND    clan_architecture.auto_clan = clans.auto_clan \
       AND    clan_acc = 'CL0001'
       LIMIT  5 \G

*************************** 1. row ***************************
    architecture: DSL~EGF_2~EGF_2~EGF
architecture_acc: PF01414 PF07974 PF07974 PF00008
    type_example: 4790
         no_seqs: 2
*************************** 2. row ***************************
    architecture: MNNL~DSL~EGF~EGF~EGF~EGF~EGF~EGF
architecture_acc: PF07657 PF01414 PF00008 PF00008 PF00008 PF00008 PF00008 PF00008
    type_example: 22062
         no_seqs: 20
*************************** 3. row ***************************
    architecture: MNNL~DSL~EGF~EGF~EGF~EGF~EGF
architecture_acc: PF07657 PF01414 PF00008 PF00008 PF00008 PF00008 PF00008
    type_example: 22068
         no_seqs: 9
*************************** 4. row ***************************
    architecture: MNNL~DSL~EGF~EGF~EGF~EGF~EGF~EGF~EGF_CA
architecture_acc: PF07657 PF01414 PF00008 PF00008 PF00008 PF00008 PF00008 PF00008 PF07645
    type_example: 22131
         no_seqs: 8
*************************** 5. row ***************************
    architecture: MNNL~DSL~EGF~EGF~EGF~EGF~EGF~EGF~EGF~EGF~EGF~EGF~EGF
architecture_acc: PF07657 PF01414 PF00008 PF00008 PF00008 PF00008 PF00008 PF00008 PF00008 PF00008 PF00008 PF00008 PF00008
    type_example: 43821
         no_seqs: 4</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the database links for clan 'CL0001'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT db_id, \
              comment, \
              db_link, \
              other_params \
       FROM   clan_database_links, \
              clans \
       WHERE  clan_database_links.auto_clan = clans.auto_clan \
       AND    clan_acc = 'CL0001';

+-------+---------+------------+--------------+
| db_id | comment | db_link    | other_params |
+-------+---------+------------+--------------+
| SCOP  | NULL    | 57196      |              |
| CATH  | NULL    | 2.10.25.10 |              |
+-------+---------+------------+--------------+</pre>
    </fieldset>

    <p><a class="link" rel="dbTop">back to top</a></p>

    <hr />

    <h2><a name="dead">Dead families and clans</a></h2>

    <img class="tables"
         alt="Dead families"
         src="[% c.uri_for( "/static/images/help/db_schema/dead.png" ) %]" />

    <p>
      Sometimes we find that two or more Pfam-A families can be merged into a single
      family, which leads to the deletion of Pfam-A families. Likewise we might
      merged two clans together, which results in the deletion of a clan. The
      <span class="table">dead_families</span> and <span class="table">
        dead_clans</span> tables contain information about Pfam-A families
      and clans that have been deleted. These tables may be of use if you need to
      track what happened to the members of a particular family/clan that is no
      longer in Pfam.
    </p>


    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the information about 'dead' Pfam-A family 
      'PF06700'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT * FROM dead_families WHERE pfamA_acc = 'PF09410' \G

 pfamA_acc: PF09410
  pfamA_id: DUF2006
   comment: Merged into PF07143
forward_to: PF07143
      user: jm14
    killed: 2009-08-25 10:33:41</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the information about 'dead' clan 'CL0152'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT * FROM dead_clans WHERE clan_acc = "CL0152" \G

        clan_acc: CL0152
         clan_id: XI_TIM
clan_description: Xylose isomerase-like TIM barrel superfamily
 clan_membership:
         comment: Merged clan in to TIM_barrel clan
      forward_to: CL0036
            user: rdf
          killed: 2009-06-22 17:47:17</pre>
    </fieldset>

    <p><a class="link" rel="dbTop">back to top</a></p>

    <hr />

    <h2><a name="nested">Nested domains</a></h2>

    <img class="tables"
         alt="Nested domains"
         src="[% c.uri_for( '/static/images/help/db_schema/nested.png' ) %]" />

    <p>
      Some Pfam-A domains are disrupted by the insertion of another domain (or
      domains) within them. The domain that is inserted into another is known
      as a nested domain. The <span class="column">nested_locations</span> 
      table stores all the nested Pfam-A domains. It also stores the 
      coordinates of the nested domain with respect to a sequence that is 
      present in the <em>seed</em> alignment of the domain in which it nests.
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the nested domains and the domains in which they are nested 
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT A.pfamA_id, \
              B.pfamA_id AS nested_domain \
       FROM   pfamA AS A, \
              pfamA AS B, \
              nested_domains \
       WHERE  A.auto_pfamA = nested_locations.auto_pfamA \
       AND    B.auto_pfamA = nested_locations.nests_auto_pfamA;

+-----------------+-----------------+
| pfamA_id        | nested_domain   |
+-----------------+-----------------+
| CBS             | DRTGG           |
| RecO_C          | TF_Zn_Ribbon    |
| IMPDH           | CBS             |
| End_beta_propel | End_beta_barrel |
| DUF2330         | TonB            |
| Peptidase_M10   | fn2             |
| SBP_bac_3       | Ion_trans_2     |
| SBP_bac_3       | Ion_trans       |
| RWD             | zf-CCCH         |
| NIR_SIR         | Fer4            |
| Asp             | SapB_2          |
| Asp             | SapB_1  &nbsp;  |
| PAP_central     | NTP_transf_2    |
...</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the nested data for the family IMPDH
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pfamA_id,  \
              nested_pfamA_acc, \
              pfamseq_acc, \
              seq_version, \
              seq_start, \
              seq_end \
       FROM   pfamA, \
              nested_locations\
       WHERE  pfamA.auto_pfamA = nested_locations.auto_pfamA \
       AND    pfamA_id ="IMPDH";

+----------+------------------+-------------+-------------+-----------+---------+
| pfamA_id | nested_pfamA_acc | pfamseq_acc | seq_version | seq_start | seq_end |
+----------+------------------+-------------+-------------+-----------+---------+
| IMPDH    | PF00571          | P24547      |           2 |       111 |     232 |
+----------+------------------+-------------+-------------+-----------+---------+</pre>
    </fieldset>

    <p><a class="link" rel="dbTop">back to top</a></p>

    <hr />
    
    <h2><a name="ncbi">NCBI and metagenomics data</a></h2>

    <img class="tables"
         alt="Version table"
         src="[% c.uri_for( "/static/images/help/db_schema/ncbi_meta.png" ) %]" />

    <p>
      In addition to searching all of the sequences in <a class="ext"
        href="http://www.uniprot.org/help/uniprotkb/">UniProtKB</a>, we also search the
      protein sequences from <a class="ext"
      href="http://www.ncbi.nlm.nih.gov/">NCBI</a> (GenPept), and a set of
      metagenomic sequences against the Pfam-A HMMs. The <span
      class="table">ncbi_pfamA_reg</span> table contains all of the significant
      GenPept matches for each Pfam-A HMM, and the <span
      class="table">meta_pfamA_reg</span> contains all of the significant
      metagenomics matches for each Pfam-A HMM. Unlike the situation for UniProtKB
      data, we do not exclude overlapping matches between families in the same clan
      from the NCBI and metagenomics alignments, and therefore the <span
      class="column">in_full</span> columns in the <span
      class="table">ncbi_pfamA_reg</span> and <span
      class="table">meta_pfamA_reg</span> tables are obsolete (and may be removed in
      future versions of the database). The <span class="table">ncbi_map</span> table
      links the GI number to its corresponding UniProtKB entry(s).
      <strong>Note</strong> that not all GI numbers have a corresponding UniProtKB
      entry. The metagenomics sequences that we searched can be found in the metaseq
      table.
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the Pfam-A domains for NCBI protein 'GI:1000125'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pfamA_acc, \
              pfamA_id, \
              seq_start, \
              seq_end \
       FROM   ncbi_pfamA_reg, \
              pfamA \
       WHERE  ncbi_pfamA_reg.gi = '1000125' \
       AND    ncbi_pfamA_reg.auto_pfamA = pfamA.auto_pfamA;

+-----------+-------------+-----------+---------+
| pfamA_acc | pfamA_id    | seq_start | seq_end |
+-----------+-------------+-----------+---------+
| PF02185   | HR1         |        47 |     114 |
| PF02185   | HR1         |       136 |     207 |
| PF02185   | HR1         |       217 |     289 |
| PF00433   | Pkinase_C   |       936 |     983 |
| PF07714   | Pkinase_Tyr |       657 |     905 |
| PF00069   | Pkinase     |       657 |     916 |
+-----------+-------------+-----------+---------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the NCBI protein domains for the 
      Pfam-A family 'AalphaY_MDB'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT gi, \
              seq_start, \
              seq_end, \
              pfamA_id \
       FROM   pfamA, \
              ncbi_pfamA_reg \
       WHERE  pfamA_id = 'AalphaY_MDB' \
       AND    pfamA.auto_pfamA = ncbi_pfamA_reg.auto_pfamA \
       AND    in_full = 1;

+---------+-----------+---------+-------------+
| gi      | seq_start | seq_end | pfamA_id    |
+---------+-----------+---------+-------------+
| 8650517 |         1 |     147 | AalphaY_MDB |
| 2314885 |         1 |     149 | AalphaY_MDB |
|  169855 |         1 |     146 | AalphaY_MDB |
|  169861 |         1 |     146 | AalphaY_MDB |
|  169857 |         1 |     147 | AalphaY_MDB |
+---------+-----------+---------+-------------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the metagenomics domains for the family '3-alpha'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT metaseq_acc, \
              seq_start, \
              seq_end, \
              pfamA_id \
       FROM   pfamA, \
              metaseq, \
              meta_pfamA_reg \
       WHERE  pfamA_id = '3-alpha' \
       AND    pfamA.auto_pfamA = meta_pfamA_reg.auto_pfamA \
       AND    meta_pfamA_reg.auto_metaseq = metaseq.auto_metaseq;

+-------------+-----------+---------+----------+
| metaseq_acc | seq_start | seq_end | pfamA_id |
+-------------+-----------+---------+----------+
| EBC58818.1  |       172 |     218 | 3-alpha  |
| EBB53961.1  |       183 |     229 | 3-alpha  |
| 2001510128  |        48 |      93 | 3-alpha  |
| ECV16193.1  |       172 |     218 | 3-alpha  |
| EBT67177.1  |       169 |     215 | 3-alpha  |
| ECV05831.1  |       172 |     218 | 3-alpha  |
| 2001448363  |        23 |      62 | 3-alpha  |
| ECV29667.1  |       419 |     465 | 3-alpha  |
| EBT80309.1  |       133 |     178 | 3-alpha  |
| ECB16942.1  |        46 |      92 | 3-alpha  |
| EBL10473.1  |       173 |     219 | 3-alpha  |
| ECN56225.1  |        16 |      62 | 3-alpha  |
| 2000097130  |       178 |     223 | 3-alpha  |
| EDF57633.1  |       169 |     215 | 3-alpha  |
| EDF88754.1  |       185 |     230 | 3-alpha  |
| ECD80201.1  |       120 |     166 | 3-alpha  |
| EBV29651.1  |        74 |     119 | 3-alpha  |
| EBG15763.1  |       173 |     215 | 3-alpha  |
| EDC05583.1  |       227 |     273 | 3-alpha  |
| EDD80781.1  |       172 |     218 | 3-alpha  |
| EDB76302.1  |       169 |     215 | 3-alpha  |
+-------------+-----------+---------+----------+</pre>
    </fieldset>

    <hr />

    <h2><a name="structural">Structural data</a></h2>

    <img class="tables"
         alt="PDB table"
         src="[% c.uri_for( "/static/images/help/db_schema/pdb.png" ) %]" />

    <p>
      In order for the <a class="ext" href="http://www.wwpdb.org/">Protein
      DataBank</a> (PDB) information to be useful to Pfam, we need to map
      between PDB residues and UniProtKB sequence residues, which is not a
      trivial task. We store the residue-by-residue mapping that is provided by
      the <a class="ext" href="http://www.ebi.ac.uk/pdbe/">PDBe</a> group in
      the <span class="table">pdb_residue_data</span> table.
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the first 10 residue mappings for the structure '2abl'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pdb.pdb_id, \
              pdb_res, \
              pdb_seq_number, \
              pfamseq_acc, \
              pfamseq_res, \
              pfamseq_seq_number \
       FROM   pdb_residue_data, \
              pdb  \
       WHERE  pdb.pdb_id = pdb_residue_data.pdb_id \
       AND    pdb.pdb_id = '2abl' \
       LIMIT  10;

+--------+---------+----------------+-------------+-------------+--------------------+
| pdb_id | pdb_res | pdb_seq_number | pfamseq_acc | pfamseq_res | pfamseq_seq_number |
+--------+---------+----------------+-------------+-------------+--------------------+
| 2abl   | GLY     |             76 | P00519      | G           |                 57 |
| 2abl   | PRO     |             77 | P00519      | P           |                 58 |
| 2abl   | SER     |             78 | P00519      | S           |                 59 |
| 2abl   | GLU     |             79 | P00519      | E           |                 60 |
| 2abl   | ASN     |             80 | P00519      | N           |                 61 |
| 2abl   | ASP     |             81 | P00519      | D           |                 62 |
| 2abl   | PRO     |             82 | P00519      | P           |                 63 |
| 2abl   | ASN     |             83 | P00519      | N           |                 64 |
| 2abl   | LEU     |             84 | P00519      | L           |                 65 |
| 2abl   | PHE     |             85 | P00519      | F           |                 66 |
+--------+---------+----------------+-------------+-------------+--------------------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all the structures that map to the family 'Globin'
    </fieldset>
    
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pdb_pfamA_reg.pdb_id, \
              chain, \
              pdb_res_start, \
              pdb_res_end, \
              seq_start, 
              seq_end \
       FROM   pdb, \
              pdb_pfamA_reg, \
              pfamA \
       WHERE  pfamA_id = 'Globin' \
       AND    pfamA.auto_pfamA = pdb_pfamA_reg.auto_pfamA \
       AND    pdb_pfamA_reg.pdb_id = pdb.pdb_id;

+--------+-------+---------------+-------------+-----------+---------+
| pdb_id | chain | pdb_res_start | pdb_res_end | seq_start | seq_end |
+--------+-------+---------------+-------------+-----------+---------+
| 2vyy   | A     |             1 |          87 |         2 |      88 |
| 1v07   | A     |             1 |          87 |         2 |      88 |
| 2vyz   | A     |             1 |          87 |         2 |      88 |
| 1kr7   | A     |             1 |          87 |         2 |      88 |
| 1wmu   | A     |             6 |         106 |         6 |     106 |
| 2z6n   | A     |             6 |         106 |         6 |     106 |
| 1v75   | A     |             6 |         106 |         6 |     106 |
| 3fs4   | C     |             6 |         106 |         6 |     106 |
| 3fs4   | A     |             6 |         106 |         6 |     106 |
| 2mhb   | B     |             7 |         111 |         7 |     111 |
... </pre>
    </fieldset>

    <p><a class="link" rel="dbTop">back to top</a></p>

    <hr />

    <h2><a name="proteomes">Proteomes</a></h2>

    <img class="tables"
         alt="Proteome tables"
         src="[% c.uri_for( "/static/images/help/db_schema/proteome.png" ) %]" />

    <p>
      At each Pfam release, we download the proteome set from the <a class="ext"
      href="http://www.ebi.ac.uk/integr8/EBI-Integr8-HomePage.do">Integr8</a>
      resource. The species and NCBI taxonomy IDs for all of the proteomes in our
      Integr8 proteome set can be found in the <span
      class="table">complete_proteomes</span> table, along with some statistics
      about the number of families and coverage. The tables in this section allow
      you to retrieve domain information about a particular species, or to
      retrieve all of the species which contain a particular Pfam domain.  
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me the Pfam summary for the human (Homo sapiens) proteome
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT * FROM complete_proteomes WHERE species = "Homo sapiens" \G

        auto_proteome: 511
           ncbi_taxid: 9606
              species: Homo sapiens
             grouping: Eukaryota
 num_distinct_regions: 4315
    num_total_regions: 68410
         num_proteins: 32474
    sequence_coverage: 72
     residue_coverage: 40
total_genome_proteins: 44817
      total_aa_length: 19347573
     total_aa_covered: 7758075
   total_seqs_covered: 32474</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all the Pfam-A domains for the species 'Arabidopsis thaliana'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre> mysql> SELECT   pfamA_acc, \
                 pfamA_id, \
                 description, \
                 SUM(count) \
        FROM     complete_proteomes, \
                 proteome_regions, \
                 pfamA \
        WHERE    complete_proteomes.ncbi_taxid = 3702 \
        AND      proteome_regions.auto_pfamA = pfamA.auto_pfamA \
        AND      proteome_regions.auto_proteome = complete_proteomes.auto_proteome \
        GROUP BY proteome_regions.auto_pfamA;

+-----------+----------------+-----------------------------------------------------------------+------------+
| pfamA_acc | pfamA_id       | description                                                     | sum(count) |
+-----------+----------------+-----------------------------------------------------------------+------------+
| PF00389   | 2-Hacid_dh     | D-isomer specific 2-hydroxyacid dehydrogenase, catalytic domain |         10 |
| PF00198   | 2-oxoacid_dh   | 2-oxoacid dehydrogenases acyltransferase (catalytic domain)     |         11 |
| PF03171   | 2OG-FeII_Oxy   | 2OG-Fe(II) oxygenase superfamily                                |        144 |
| PF01073   | 3Beta_HSD      | 3-beta hydroxysteroid dehydrogenase/isomerase family            |          9 |
| PF04419   | 4F5            | 4F5 protein family                                              |          3 |
| PF03061   | 4HBT           | Thioesterase superfamily                                        |         13 |
...</pre>
    </fieldset>
    
    <p>
      <strong>Note:</strong> The <span class="column">ncbi_code</span> for the 
      species 'Arabidopsis thaliana' is 3702. This information can be 
      found in the <span class="table">ncbi_taxonomy</span> table.
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the UniProtKB protein sequences for the species 
      'Arabidopsis thaliana' 
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pfamseq.pfamseq_id \
       FROM   pfamseq, \
              genome_seqs \
       WHERE  pfamseq.ncbi_code = '3702' \
       AND    genome_seqs.auto_pfamseq = pfamseq.auto_pfamseq;
+-------------+
| pfamseq_id  |
+-------------+
| 12S1_ARATH  |
| 12S2_ARATH  |
| 14331_ARATH |
| 14332_ARATH |
| 14333_ARATH |
| 14334_ARATH |
| 14335_ARATH |
| 14336_ARATH |
| 14337_ARATH |
...</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the UniProtKB protein sequences from the species 
      'Arabidopsis thaliana' that belong to Pfam-A domain 
      'PF00106'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pfamseq.pfamseq_id \
       FROM   pfamseq, \
              genome_seqs, \
              pfamA \
       WHERE  genome_seqs.ncbi_code = '3702' \
       AND    genome_seqs.auto_pfamseq = pfamseq.auto_pfamseq \
       AND    genome_seqs.auto_pfamA = pfamA.auto_pfamA \
       AND    pfamA_acc = 'PF00106';
+--------------+
| pfamseq_id   |
+--------------+
| FABG_ARATH   |
| PORA_ARATH   |
| PORB_ARATH   |
| PORC_ARATH   |
| O22985_ARATH |
| O49332_ARATH |
| O80711_ARATH |
| O80713_ARATH |
| O80714_ARATH |
| O80924_ARATH |
...</pre>
    </fieldset>

    <p><a class="link" rel="dbTop">back to top</a></p>

    <hr />

    <h2><a name="related">Related families</a></h2>

    <img class="tables"
         alt="Related families"
         src="[% c.uri_for( "/static/images/help/db_schema/related_families.png" ) %]" />

    <p>
      <a class="ext"
        href="http://bioinformatics.oxfordjournals.org/cgi/content/short/23/7/809">SCOOP</a>
      and <a class="ext" href="http://toolkit.tuebingen.mpg.de/hhpred">HHsearch</a>
      are two pieces of software that we use to help to determine which Pfam-A
      families are related. The scores from these programs have been a very useful
      aid in deciding which Pfam-A families should belong to the same clan. As a
      rough guide, a SCOOP score greater than 50 or a HHsearch E-value score of less
      than 0.01 is an indication that two families are closely related.
    </p>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all pf the Pfam-A families that have a SCOOP score greater than 50 when 
      compared to the family 'ABC1'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT a.pfamA_id, \
              b.pfamA_id, \
              score \
       FROM   pfamA AS a, \
              pfamA AS b, \
              pfamA2pfamA_scoop_results AS p\
       WHERE  a.auto_pfamA = p.auto_pfamA1 \
       AND    b.auto_pfamA = p.auto_pfamA2\
       AND    score > 50 \
       AND    a.pfamA_id = "ABC1";

+----------+-----------------+---------+
| pfamA_id | pfamA_id        | score   |
+----------+-----------------+---------+
| ABC1     | Pkinase         | 82.5059 |
| ABC1     | Pox_ser-thr_kin | 77.4765 |
| ABC1     | Kdo             | 62.4555 |
| ABC1     | Seadorna_VP7    | 53.7196 |
| ABC1     | Pkinase_Tyr     | 85.9087 |
| ABC1     | RIO1            | 60.2442 |
+----------+-----------------+---------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all pf the Pfam-A families that have a HHsearch E-value score of
      less than 0.01 when compared to the family 'AAA'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT a.pfamA_id, \
              b.pfamA_id, \
              evalue \
       FROM   pfamA AS a, \
              pfamA AS b, \
              pfamA2pfamA_hhsearch_results AS p \
       WHERE  a.auto_pfamA = p.auto_pfamA1 \
       AND    b.auto_pfamA = p.auto_pfamA2 \
       AND    evalue < 0.01 \
       AND    a.pfamA_id = "AAA";

+----------+-----------------+---------+
| pfamA_id | pfamA_id        | evalue  |
+----------+-----------------+---------+
| AAA      | Sigma54_activat | 0.0069  |
| AAA      | RuvB_N          | 5.6E-08 |
| AAA      | AAA_2           | 0.00011 |
| AAA      | AAA_5           | 0.00011 |
| AAA      | Viral_helicase1 | 0.0045  |
| AAA      | AAA             | 8.8E-23 |
| AAA      | IstB            | 0.00063 |
+----------+-----------------+---------+</pre>
    </fieldset>

    <fieldset class="query">
      <legend>Example query</legend>
      Give me all of the UniProtKB protein sequences for the species 'Gallus gallus'
    </fieldset>
      
    <fieldset class="sql">
      <legend>SQL</legend>
      <pre>mysql> SELECT pfamseq_id, \
              pfamseq_acc FROM pfamseq, \
              proteome_pfamseq, \
              complete_proteomes\
       WHERE  complete_proteomes.species = "Gallus gallus" \
       AND    pfamseq.auto_pfamseq = proteome_pfamseq.auto_pfamseq \
       AND    proteome_pfamseq.auto_proteome =complete_proteomes.auto_proteome;

+--------------+-------------+
| pfamseq_id   | pfamseq_acc |
+--------------+-------------+
| Q788U5_CHICK | Q788U5      |
| Q5ZHK8_CHICK | Q5ZHK8      |
| Q7T1N6_CHICK | Q7T1N6      |
| Q9DEG1_CHICK | Q9DEG1      |
| PRTG_CHICK   | Q589G5      |
| B5BSF2_CHICK | B5BSF2      |
| Q8QGR9_CHICK | Q8QGR9      |
| CLLD6_CHICK  | Q5ZHV7      |
| Q5ZK24_CHICK | Q5ZK24      |
| HXC8_CHICK   | Q9YH13      |
...</pre>
    </fieldset>

    <p><a class="link" rel="dbTop">back to top</a></p>

    <hr />

    <h2><a name="data">Data Files - Alignments, trees and HMMs</a></h2>

    <img class="tables"
         alt="HMM tables"
         src="[% c.uri_for( "/static/images/help/db_schema/alignments_and_trees.png" ) %]" />

    <p>
      The seed, full, NCBI and metaseq alignments are all stored as gzipped
      files in the database, as is the HMM for each family. Note that the NCBI
      and metaseq alignments may contain overlapping matches to Pfam-A families
      that belong to the same clan, however, the UniprotKB alignments (seed and
      full) will not. This is because we have performed a clan filtering step
      on the UniProtKB data such that where there are overlapping Pfam-A
      matches within a clan, only the lowest E-value scoring match is included
      in the full alignment.
    </p>

    <p><a class="link" rel="dbTop">back to top</a></p>

  </div>
</div>

<!-- end database block -->

[%#
Copyright (c) 2007: Genome Research Ltd.

Authors: Rob Finn (rdf@sanger.ac.uk), John Tate (jt6@sanger.ac.uk)

This is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public License along with
this program. If not, see <http://www.gnu.org/licenses/>.
-%]
