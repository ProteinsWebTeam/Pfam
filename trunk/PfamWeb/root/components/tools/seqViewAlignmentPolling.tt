
[%
# seqViewAlignmentPolling.tt
# jt6 20061101 WTSI
# 
# part of the species tree. This template sets up the polling when a user
# opts to align a set of selected sequences. 
#
# $Id: seqViewAlignmentPolling.tt,v 1.3 2007-11-23 12:39:55 jt6 Exp $

# tell the wrapper not to add any header or footer
META naked = 1;

#-------------------------------------------------------------------------------
# specify required stylesheets and javascript files 

PROCESS "components/require.tt";
requirements.css.push( "job.css" );
requirements.js.push( "job.js" );

#-------------------------------------------------------------------------------

pageContent = BLOCK;

CALL c.log.debug( "in seqView.tt" );

title = "Align selected sequences"
-%]

<h1>Alignment selected sequences</h1>

<p>
  You selected <strong>[% selectedSeqAccs.size %]</strong> sequences.
  [% IF selectedSeqAccs.size >= 10 %]
    <span onclick="reveal( this, 'extraAccs', false, true )"
          class="moreLink">Show all accessions...</span>
  [% END %]
</p>
<div id="selectedAccs">
[% IF selectedSeqAccs.size >= 10 %]
  <p>
    [% i = 0;
    WHILE i < 10 %]
      <a href="[% c.uri_for( "/protein", { acc = selectedSeqAccs.$i } ) %]">
        [% selectedSeqAccs.$i %]</a>
    [% i = i + 1;
    END %]
    <span>&hellip;</span>
  </p>
  <div class="cleaner"><!-- empty --></div>
      
  <div id="extraAccs" style="display: none">
    [% i = 10;
    WHILE i < selectedSeqAccs.size %]
    <a href="[% c.uri_for( "/protein", { acc = selectedSeqAccs.$i } ) %]">
      [% selectedSeqAccs.$i %]</a>
    [% i = i + 1;
    END %]
  </div>
  <div class="cleaner"><!-- empty --></div>
[% ELSE %]
  <p>
  [% FOREACH seq IN selectedSeqAccs %]
    <a href="[% c.uri_for( "/protein", { acc = seq } ) %]">[% seq %]</a>
  [% END %]
  </p>
[% END %]  
</div>

<div id="logger">
  <h3>Status</h3>
  <div id="logScroller"></div>
</div>

<div id="errors"></div>

<div id="jobs"></div>

<script type="text/javascript">
  // <![CDATA[
  
  var oJobStatus;
  try {
    oJobStatus = '[% jobStatus %]'.evalJSON( true );
  } catch( e ) {
    $("errors")
      .update( "There was a problem retrieving job parameters from the server." )
      .show();
  }
  
  if( ! ( oJobStatus === undefined ) ) {

    var jobs = [];
    $A( oJobStatus ).each( 
      function( jobConfig ) {
        
        var p;
        try {
          p  = new Job( jobConfig );
        } catch( e ) {
          // console.error( e );
          $("errors")
            .update( "There was a problem submitting your job to the server: "
                     + e ? e : e.description )
            .show();
        }
        jobs.push( p );
      }
    );    

  }

  // ]]>
</script>


<a href="#" onclick="window.close()" class="closer">Close window</a>

[% END # of "pageContent = BLOCK" %]

[% PROCESS components/tools/toolWindow.tt %]
