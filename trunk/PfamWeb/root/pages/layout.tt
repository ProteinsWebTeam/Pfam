
[%
# layout.tt
# jt6 20060406 WTSI
# 
# build a tab-layout page
#
# $Id: layout.tt,v 1.20 2007-06-05 15:58:40 jt6 Exp $

USE String;
USE date;

#-------------------------------------------------------------------------------
# specify required stylesheets and javascript files 

PROCESS "components/require.tt";

requirements.css.push( "tab_layout.css" );
requirements.cssIe.push( "tab_layout_ie.css" );

requirements.js.push( "cb.js" );
requirements.css.push( "cb.css" );

#-------------------------------------------------------------------------------

# this is a store for tooltip information that will be used to write the 
# javascript that actually generates the tooltip objects. This needs to be in
# here rather than in the wrapper because the content is generated here and
# then passed into the wrapper. If we define "tips" in the wrapper it just
# stomps on the data that was generated.
tips = {};

# generate a sidebar tab
BLOCK generateTab;

  # see if the tab should be activated or not
  suffix = String.new;
  IF NOT active OR firstTab;
    IF NOT active;
      CALL suffix.append( "inactive" );
    END;
    IF firstTab;
      CALL suffix.append( " selected" );
    END;
    CALL suffix.trim();
  END
-%]

  <li id="[% blockName %]Selector"[% IF suffix %] class="[% suffix %]"[% END %]>
    [% IF active -%]
	  [%# this div is purely to avoid the IE box model bug... -%]
      <div>
        <a href="javascript:switchTab('[% blockName %]')">[% blockTitle %]</a>
      </div>
    [% ELSE -%]
      <div class="inactive">[% blockTitle %]</div>
    [% END -%]
  </li>

[% END %]

[%
firstTab    = 1;
tabsContent = String.new;
pageContent = String.new;

activity = {};

FOREACH block IN layouts.${pageType}.blocks;

  blockName = block.keys.first;
  blockFile = blocks.${blockName};
  blockTitle = block.values.first;

  # build the contents of the tab, if it's active
  
  # if we're in debug mode, just try to render the file, without a safety net,
  # so that we can see where the template breaks (if it breaks at all)
  IF c.debug;
    pageOutput = PROCESS $blockFile;
    CALL pageContent.append( pageOutput );
  ELSE;
    # we're not debugging, so catch the errors from the template and carry on
    TRY;
      pageOutput = PROCESS $blockFile;
      CALL pageContent.append( pageOutput );
    CATCH;
      CALL c.log.error( "layout.tt: Couldn't render template file \"$blockFile\"" );
    END;
  END;

  IF pageOutput;
    blockActive = 1;
  ELSE;
    blockActive = 0;
  END;
  activity.$blockName = blockActive;

  # build the tab label
  tabsOutput = PROCESS generateTab active = blockActive;
  CALL tabsContent.append( tabsOutput );

  firstTab = 0;

END;
%]

[% PROCESS components/icons.tt %]

<div id="tabTitle">
  [%
  titleFile = layouts.${pageType}.titleTemplate;
  TRY;
    PROCESS $titleFile titleType="tab";
  CATCH;
    CALL c.log.error( "layout.tt: Couldn't render title file \"$titleFile\" (page type \"$pageType\")" );
  END
  %]
</div>

<div class="cleaner"><!-- empty --></div>

<div id="wrap">

  [% # this is only here to avoid the IE peekaboo bug... -%]
  <div id="spacer">&nbsp;</div>

  <div id="topBorder"><!-- empty --></div>

  <div id="sidebar">
    <ul>
      [% tabsContent %]
    </ul>

  	[% PROCESS components/jumpBox.tt short = 1%]

  </div> <!-- end of "sidebar" -->

  <div id="content">
    [% pageContent %]
  </div> <!-- end of "content" -->

  <div class="cleaner"></div>

</div> <!-- end of "wrap" -->

<!-- tab selection -->

[% # do we want to highlight a particular tab ? %]
<script type="text/javascript">
  // <![CDATA[
  serverRoot = "[% constants.root # the server root, e.g. /catalyst/PfamWeb %]";
  section    = "[% pageType       # the site section, e.g. family, protein, etc. %]";
  showTab    = "[% showTab        # the tab, specified by a parameter %]";
  if( ! ( showTab === undefined ) && $(showTab) ) {
    switchTab( showTab );
  } else if( $$('div.error').size() ) {
  [% # see if there's an error message in the page. If there is, we'll walk back
     # up the DOM tree from that error message node until we find the "block"
     # that encloses it, grab the ID for that block and use the tab switcher
     # to select it... %]
    $$('.error')
      .first()
      .ancestors()
      .each( function( el ) {
               if( el.hasClassName( "block" ) ) { 
                 switchTab( el.id )
               }
             }
           );
  } else {
    $A( document.getElementsByClassName( "block" ) )
      .first()
      .setStyle( { display: "block" } );
    // no need to turn on the selector, because the first item in the list is
    // set to visible anyway
  }
  // ]]>
</script> 

<!-- ====================================================================== -->
