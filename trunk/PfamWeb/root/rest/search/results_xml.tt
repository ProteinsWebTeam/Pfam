[% 
# results_xml.tt
# jt6 20071129 WTSI
#
# template for returning the results of a sequence search as XML
#
# $Id: results_xml.tt,v 1.7 2009-10-28 14:09:30 jt6 Exp $

USE dumper;

META naked = 1;

baseUri = "http://pfam.xfam.org/";

# get the job ID
jobId = results.keys.shift;

# get the length of the first sequence. Since all of the results are for the
# same search string, this should be fine. Pretty ugly though.
seqLength = results.$jobId.rows.0.stdin.length;

# build hashes of arrays-of-hits, keyed on the family ID  
a_hits = {};
b_hits = {};

FOREACH row IN results.$jobId.hits.A;
  IF ! a_hits.${row.name}.defined;
    a_hits.${row.name} = [];
  END;
  a_hits.${row.name}.push( row );  
END;

FOREACH row IN results.$jobId.hits.B;
  IF ! b_hits.${row.name}.defined;
    b_hits.${row.name} = [];
  END;
  b_hits.${row.name}.push( row );  
END;
-%]
<?xml version="1.0" encoding="UTF-8"?>
<pfam xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="[% baseUri %]"
      xsi:schemaLocation="[% baseUri %]
                          [% baseUri %]static/documents/schemas/pfam_family.xsd"
      release="[% relData.pfam_release %]" 
      release_date="[% relData.pfam_release_date %]">
[% IF seqSearchError -%]
<error>
<![CDATA[
[% seqSearchError %]
]]>
</error>
[% RETURN;
END; # of "IF seqSearchError"

IF a_hits.size OR b_hits.size -%]
  <results job_id="[% jobId %]">
    <matches>
      <protein length="[% seqLength %]">
        <database id="pfam" release="[% relData.pfam_release %]" release_date="[% relData.pfam_release_date %]">
[% 
# Pfam-A hits
FOREACH hitKey IN a_hits.keys;
  hit = a_hits.$hitKey;
  CALL c.log.debug( "results_xml.tt: hit: |" _ dumper.dump( hit ) _ "|" )
    IF c.debug;
 -%]
          <match accession="[% hit.0.acc %]" id="[% hit.0.name %]" type="Pfam-A" class="[% hit.0.type %]">
[% 
# location lines
FOREACH row IN hit -%]
            <location start="[% row.env.from %]" end="[% row.env.to %]" ali_start="[% row.seq.from %]" ali_end="[% row.seq.to %]" hmm_start="[% row.hmm.from %]" hmm_end="[% row.hmm.to %]" evalue="[% row.evalue %]" bitscore="[% row.bits %]" evidence="hmmer v[% relData.hmmer_version %]" significant="[% row.sig %]">
              <hmm>
                <![CDATA[[% row.align.0.substr(11) %]]]>
              </hmm>
              <match_string>
                <![CDATA[[% row.align.1.substr(11) %]]]>
              </match_string>
              <pp>
                <![CDATA[[% row.align.2.substr(11) %]]]>
              </pp>
              <seq>
                <![CDATA[[% row.align.3.substr(11) %]]]>
              </seq>
              <raw>
                <![CDATA[
[% row.align.join("\n") %]
                ]]>
              </raw>
            </location>
[% END -%]
          </match>
[% END; # of Pfam-A hits
  
# Pfam-B hits
FOREACH hitKey IN b_hits.keys;
  hit = b_hits.$hitKey;
  CALL c.log.debug( "results_xml.tt: hit: |" _ dumper.dump( hit ) _ "|" )
    IF c.debug;
-%]
          <match accession="[% hit.0.acc %]" id="[% hit.0.name %]" type="Pfam-B">
[% FOREACH row IN hit -%]
            <location start="[% row.env.from %]" end="[% row.env.to %]" ali_start="[% row.seq.from %]" ali_end="[% row.seq.to %]" hmm_start="[% row.hmm.from %]" hmm_end="[% row.hmm.to %]" evalue="[% row.evalue %]" bitscore="[% row.bits %]" evidence="hmmer v[% relData.hmmer_version %]" significant="1">
              <hmm>
                <![CDATA[[% row.align.0.substr(11) %]]]>
              </hmm>
              <match_string>
                <![CDATA[[% row.align.1.substr(11) %]]]>
              </match_string>
              <pp>
                <![CDATA[[% row.align.2.substr(11) %]]]>
              </pp>
              <seq>
                <![CDATA[[% row.align.3.substr(11) %]]]>
              </seq>
              <raw>
                <![CDATA[
[% row.align.join("\n") %]
                ]]>
              </raw>
            </location>
[% END -%]
          </match>
[% END -%]
        </database>
      </protein>
    </matches>
  </results>
[% ELSE -%]
  <results />
[% END; # of "if results..." -%]
</pfam>[%#
Copyright (c) 2007: Genome Research Ltd.

Authors: Rob Finn (rdf@sanger.ac.uk), John Tate (jt6@sanger.ac.uk)

This is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public License along with
this program. If not, see <http://www.gnu.org/licenses/>.
-%]
