const IP_PFAM_FAMILY_API = "https://www.ebi.ac.uk/interpro/wwwapi/entry/pfam/";
const IP_PFAM_FAMILY_WEB = "https://www.ebi.ac.uk/interpro/entry/pfam/";

const getInterProStructureModelLink = async function(accession) {
  const url = new URL(accession, IP_PFAM_FAMILY_API);
  let promise = fetch(url);
  let response = await(promise);
  if (response.ok) {
    const json = await response.json();
    if (json?.metadata?.counters?.structural_models > 0) {
      addStructureTabToPage(accession);
    }
  } else {
    console.log("WARNING: Failed to fetch " + url);
  }
};

const addStructureTabToPage = function(accession) {
  const structureModelId = "tabview=tab9";
  const structureModelSelectorId = "structureModelSelector"
  // create navigation link
  const structureModelSelector = document.createElement("LI");
  structureModelSelector.id = structureModelSelectorId;
  const link = document.createElement("A");
  //link.href = "#" + structureModelId;
  link.text = "Structure Model";
  structureModelSelector.append(link);

  // add to navigation link
  const structure = document.getElementById('pdbBlockSelector');
  const sidebar = document.getElementById("sidebar");
  if (structure && sidebar) {
    structure.parentElement.appendChild(structureModelSelector);
    sidebar.addEventListener("click", (e) => {
      e.preventDefault();
      const target = e.target.parentElement;
      const structureModelSection = document.getElementById(structureModelId);
      if (target.id === structureModelSelectorId) {
        //container.style.visibility = "visible";
        const content = document.getElementById("content").children;
        for (const section of content) {
          console.log(`MAQ ${section.id}`);
          if (section.id != structureModelSelectorId) {
            section.classList.add("yui-hidden");
          }
        }
        structureModelSection.classList.remove("yui-hidden");
        structureModelSection.title = "active";
      } else {
        //container.style.visibility = "hidden";
        structureModelSection.classList.add("yui-hidden");
        structureModelSection.title = null;
      }
    });
  }
  const url = new URL(`${accession}/model`, IP_PFAM_FAMILY_WEB);

  // create title
  const title = document.createElement("H1");
  title.innerHTML = "Structure Model";
  const titleContainer = document.createElement("DIV");
  titleContainer.classList.add("handle");
  titleContainer.appendChild(title);
  // create content

  const intro = document.createElement("P");
  intro.innerHTML = `A structural model is has been predicted for this Family.
  The model was generated by the
  <a href="https://www.bakerlab.org/">Baker</a> group with the trRosetta
  software based on the Pfam uniprot multiple sequence alignment`;
  const links = document.createElement("P");
  links.innerHTML = `
  <ul>
    <li><a href="${IP_PFAM_FAMILY_WEB}/${accession}/model" target="_blank">View the structural
    model in InterPro</a></li>
    <li><a href="${IP_PFAM_FAMILY_API}/${accession}/?model:structure"
    filename="${accession}_prediction.pdb" target="_blank">Download the model in PDB format</a></li>
    <li><a href="http://ftp.ebi.ac.uk/pub/databases/Pfam" target="_blank">Download all the data from the Pfam FTP site</a></li>
  </ul>`;

  const textContainer = document.createElement("DIV");
  textContainer.classList.add("blockContent");
  textContainer.appendChild(intro);
  textContainer.appendChild(links);

  // create container for structure model divs
  const structureModelContainer = document.createElement("DIV");
  structureModelContainer.id = structureModelId;
  structureModelContainer.classList.add("block");

  structureModelContainer.appendChild(titleContainer);
  structureModelContainer.appendChild(textContainer);

  // add to doc
  const detailsContainer = document.getElementById("content");
  if (detailsContainer) {
    detailsContainer.appendChild(structureModelContainer);
  }
  if (structureModelSelector.classList.contains("selected")) {
    //structureModelContainer.style.visibility = "visible";
    structureModelContainer.classList.remove("yui-hidden");
  } else {
    //structureModelContainer.style.visibility = "hidden";
    structureModelContainer.classList.add("yui-hidden");
  }
};


const fetchStructureModel = function(accession) {

};
